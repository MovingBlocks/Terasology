/*
 * Copyright 2017 MovingBlocks
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 22 21:24:06 GMT 2017
 */

package org.terasology.config;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonObject;
import com.google.gson.JsonSerializationContext;
import java.lang.reflect.Type;
import java.math.BigInteger;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.junit.runner.RunWith;
import org.terasology.config.ClientIdentity;
import org.terasology.config.SecurityConfig;
import org.terasology.identity.PrivateIdentityCertificate;
import org.terasology.identity.PublicIdentityCertificate;


public class SecurityConfig_ESTest{

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SecurityConfig.Handler securityConfig_Handler0 = new SecurityConfig.Handler();
      Class<Character> class0 = Character.TYPE;
      SecurityConfig securityConfig0 = new SecurityConfig();
      // Undeclared exception!
      try { 
        securityConfig_Handler0.serialize(securityConfig0, (Type) class0, (JsonSerializationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         //assertThrownBy("org.terasology.config.SecurityConfig$Handler", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SecurityConfig securityConfig0 = new SecurityConfig();
      ClientIdentity clientIdentity0 = securityConfig0.getIdentity((PublicIdentityCertificate) null);
      assertNull(clientIdentity0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SecurityConfig.Handler securityConfig_Handler0 = new SecurityConfig.Handler();
      JsonObject jsonObject0 = new JsonObject();
      jsonObject0.addProperty("serverPrivateCertificate", "serverPrivateCertificate");
      // Undeclared exception!
      try { 
        securityConfig_Handler0.deserialize(jsonObject0, (Type) null, (JsonDeserializationContext) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.gson.JsonPrimitive cannot be cast to com.google.gson.JsonObject
         //
         //assertThrownBy("com.google.gson.JsonObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SecurityConfig securityConfig0 = new SecurityConfig();
      PublicIdentityCertificate publicIdentityCertificate0 = new PublicIdentityCertificate("Xr3G0P@fjcmg:", (BigInteger) null, (BigInteger) null, (BigInteger) null);
      // Undeclared exception!
      try { 
        securityConfig0.getIdentity(publicIdentityCertificate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         //assertThrownBy("org.terasology.identity.PublicIdentityCertificate", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SecurityConfig.Handler securityConfig_Handler0 = new SecurityConfig.Handler();
      JsonObject jsonObject0 = new JsonObject();
      SecurityConfig securityConfig0 = securityConfig_Handler0.deserialize(jsonObject0, (Type) null, (JsonDeserializationContext) null);
      PublicIdentityCertificate publicIdentityCertificate0 = securityConfig0.getServerPublicCertificate();
      assertNull(publicIdentityCertificate0);
  }
}
