/*
 * Copyright 2017 MovingBlocks
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 22 21:30:49 GMT 2017
 */

package org.terasology.config;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.runner.RunWith;
import org.terasology.config.NetworkConfig;
import org.terasology.config.ServerInfo;


public class NetworkConfig_ESTest{

  @Test(timeout = 4000)
  public void testNetworkConfigGetUpstreamBandwidth()  throws Throwable  {
      NetworkConfig networkConfig0 = new NetworkConfig();
      networkConfig0.setUpstreamBandwidth(19);
      int int0 = networkConfig0.getUpstreamBandwidth();
      assertEquals(19, int0);
  }

  @Test(timeout = 4000)
  public void testNetworkConfigGetServerPort1()  throws Throwable  {
      NetworkConfig networkConfig0 = new NetworkConfig();
      networkConfig0.setServerPort((1971));
      int int0 = networkConfig0.getServerPort();
      assertEquals((1971), int0);
  }

  @Test(timeout = 4000)
  public void testNetworkConfigGetMasterServer1()  throws Throwable  {
      NetworkConfig networkConfig0 = new NetworkConfig();
      networkConfig0.setMasterServer("");
      String string0 = networkConfig0.getMasterServer();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void testNetworkConfigGetMasterServerGetServerPort()  throws Throwable  {
      NetworkConfig networkConfig0 = new NetworkConfig();
      int int0 = networkConfig0.getServerPort();
      assertEquals("meta.terasology.org", networkConfig0.getMasterServer());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void testNetworkConfigRemoveServerInfo()  throws Throwable  {
      NetworkConfig networkConfig0 = new NetworkConfig();
      networkConfig0.removeServerInfo((ServerInfo) null);
      assertEquals("meta.terasology.org", networkConfig0.getMasterServer());
  }

  @Test(timeout = 4000)
  public void testNetworkConfigAddServerInfo()  throws Throwable  {
      NetworkConfig networkConfig0 = new NetworkConfig();
      networkConfig0.addServerInfo((ServerInfo) null);
      assertEquals("meta.terasology.org", networkConfig0.getMasterServer());
  }

  @Test(timeout = 4000)
  public void testNetworkConfigGetMasterServer2()  throws Throwable  {
      NetworkConfig networkConfig0 = new NetworkConfig();
      String string0 = networkConfig0.getMasterServer();
      assertEquals("meta.terasology.org", string0);
  }

  @Test(timeout = 4000)
  public void testNetworkConfigGetMasterServer3()  throws Throwable  {
      NetworkConfig networkConfig0 = new NetworkConfig();
      networkConfig0.getServerInfos();
      assertEquals("meta.terasology.org", networkConfig0.getMasterServer());
  }

  @Test(timeout = 4000)
  public void testNetworkConfigGetServerPort2()  throws Throwable  {
      NetworkConfig networkConfig0 = new NetworkConfig();
      networkConfig0.setServerPort(19);
      int int0 = networkConfig0.getServerPort();
      assertEquals(19, int0);
  }

  @Test(timeout = 4000)
  public void testNetworkConfigClear()  throws Throwable  {
      NetworkConfig networkConfig0 = new NetworkConfig();
      networkConfig0.clear();
      assertEquals("meta.terasology.org", networkConfig0.getMasterServer());
  }

  @Test(timeout = 4000)
  public void testNetworkConfigGetUpstramBandwidth()  throws Throwable  {
      NetworkConfig networkConfig0 = new NetworkConfig();
      int int0 = networkConfig0.getUpstreamBandwidth();
      assertEquals(0, int0);
      assertEquals("meta.terasology.org", networkConfig0.getMasterServer());
  }

  @Test(timeout = 4000)
  public void testNetworkConfigSetMasterServerNull()  throws Throwable  {
      NetworkConfig networkConfig0 = new NetworkConfig();
      networkConfig0.setMasterServer((String) null);
      String string0 = networkConfig0.getMasterServer();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void testNetworkConfigGetUpstramBandwidthNegative()  throws Throwable  {
      NetworkConfig networkConfig0 = new NetworkConfig();
      networkConfig0.setUpstreamBandwidth((-973));
      int int0 = networkConfig0.getUpstreamBandwidth();
      assertEquals((-973), int0);
  }
}
