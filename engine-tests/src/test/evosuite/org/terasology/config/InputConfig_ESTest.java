/*
 * Copyright 2017 MovingBlocks
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 22 21:33:23 GMT 2017
 */

package org.terasology.config;

import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.runner.RunWith;
import org.terasology.config.BindsConfig;
import org.terasology.config.ControllerConfig;
import org.terasology.config.InputConfig;
import org.terasology.context.Context;


public class InputConfig_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InputConfig inputConfig0 = new InputConfig();
      inputConfig0.setMouseYAxisInverted(true);
      boolean boolean0 = inputConfig0.isMouseYAxisInverted();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InputConfig inputConfig0 = new InputConfig();
      inputConfig0.setMouseSensitivity(1842.5F);
      float float0 = inputConfig0.getMouseSensitivity();
      assertEquals(1842.5F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InputConfig inputConfig0 = new InputConfig();
      inputConfig0.setMouseSensitivity((-335.4677F));
      float float0 = inputConfig0.getMouseSensitivity();
      assertEquals((-335.4677F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InputConfig inputConfig0 = new InputConfig();
      boolean boolean0 = inputConfig0.isMouseYAxisInverted();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InputConfig inputConfig0 = new InputConfig();
      // Undeclared exception!
      try { 
        inputConfig0.reset((Context) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         //assertThrownBy("org.terasology.config.BindsConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      InputConfig inputConfig0 = new InputConfig();
      float float0 = inputConfig0.getMouseSensitivity();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      InputConfig inputConfig0 = new InputConfig();
      ControllerConfig controllerConfig0 = inputConfig0.getControllers();
      assertNotNull(controllerConfig0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      InputConfig inputConfig0 = new InputConfig();
      BindsConfig bindsConfig0 = inputConfig0.getBinds();
      assertNotNull(bindsConfig0);
  }
}
