/*
 * Copyright 2017 MovingBlocks
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 22 21:31:51 GMT 2017
 */

package org.terasology.config;

import org.junit.Test;
import static org.junit.Assert.*;
import java.beans.PropertyChangeListener;
import org.junit.runner.RunWith;
import org.terasology.config.AudioConfig;


public class AudioConfig_ESTest{

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AudioConfig audioConfig0 = new AudioConfig();
      audioConfig0.setDisableSound(true);
      boolean boolean0 = audioConfig0.isDisableSound();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AudioConfig audioConfig0 = new AudioConfig();
      audioConfig0.setSoundVolume(1.0F);
      float float0 = audioConfig0.getSoundVolume();
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AudioConfig audioConfig0 = new AudioConfig();
      audioConfig0.setMusicVolume(2476.09F);
      float float0 = audioConfig0.getMusicVolume();
      assertEquals(2476.09F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AudioConfig audioConfig0 = new AudioConfig();
      audioConfig0.setMusicVolume((-774.0F));
      float float0 = audioConfig0.getMusicVolume();
      assertEquals((-774.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AudioConfig audioConfig0 = new AudioConfig();
      boolean boolean0 = audioConfig0.isDisableSound();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AudioConfig audioConfig0 = new AudioConfig();
      float float0 = audioConfig0.getSoundVolume();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AudioConfig audioConfig0 = new AudioConfig();
      audioConfig0.setSoundVolume((-1158.836F));
      float float0 = audioConfig0.getSoundVolume();
      assertEquals((-1158.836F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AudioConfig audioConfig0 = new AudioConfig();
      float float0 = audioConfig0.getMusicVolume();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AudioConfig audioConfig0 = new AudioConfig();
      audioConfig0.unsubscribe((PropertyChangeListener) null);
      assertEquals(0.0F, audioConfig0.getSoundVolume(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      AudioConfig audioConfig0 = new AudioConfig();
      audioConfig0.subscribe((PropertyChangeListener) null);
      assertEquals(0.0F, audioConfig0.getMusicVolume(), 0.01F);
  }
}
