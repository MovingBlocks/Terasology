/*
 * Copyright 2017 MovingBlocks
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 22 21:31:35 GMT 2017
 */

package org.terasology.config;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Locale;
import org.junit.runner.RunWith;
import org.terasology.config.NUIEditorConfig;

public class NUIEditorConfig_ESTest {

  @Test(timeout = 4000)
  public void testNUIEditorConfigIsDisableIcons1()  throws Throwable  {
      NUIEditorConfig nUIEditorConfig0 = new NUIEditorConfig();
      nUIEditorConfig0.setDisableIcons(true);
      boolean boolean0 = nUIEditorConfig0.isDisableIcons();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void testNUIEditorConfigSetDisableAutosave()  throws Throwable  {
      NUIEditorConfig nUIEditorConfig0 = new NUIEditorConfig();
      nUIEditorConfig0.setDisableAutosave(true);
      boolean boolean0 = nUIEditorConfig0.isDisableAutosave();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void testNUIEditorConfigSetAlternativeLocale()  throws Throwable  {
      NUIEditorConfig nUIEditorConfig0 = new NUIEditorConfig();
      nUIEditorConfig0.setAlternativeLocale((Locale) null);
      assertFalse(nUIEditorConfig0.isDisableAutosave());
  }

  @Test(timeout = 4000)
  public void testNUIEditorConfigIsDisableIcons2()  throws Throwable  {
      NUIEditorConfig nUIEditorConfig0 = new NUIEditorConfig();
      boolean boolean0 = nUIEditorConfig0.isDisableIcons();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void testNUIEditorConfigIsDisableAutosave()  throws Throwable  {
      NUIEditorConfig nUIEditorConfig0 = new NUIEditorConfig();
      boolean boolean0 = nUIEditorConfig0.isDisableAutosave();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void testNUIEditorConfigGetAlternativeLocale()  throws Throwable  {
      NUIEditorConfig nUIEditorConfig0 = new NUIEditorConfig();
      Locale locale0 = nUIEditorConfig0.getAlternativeLocale();
      assertNull(locale0);
  }
}
