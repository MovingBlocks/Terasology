option java_package = "org.terasology.protobuf";
option java_outer_classname = "EntityData";
option optimize_for = SPEED;

message Value {
    repeated double double = 1 [packed=true];
    repeated float float = 2 [packed=true];
    repeated sint32 integer = 3 [packed=true];
    repeated sint64 long = 4 [packed=true];
    repeated bool boolean = 5 [packed=true];
    repeated string string = 6;
    optional bytes bytes = 7;
    repeated Value value = 8;
    repeated NameValue name_value = 9; // For string maps
    // repeated ValuePair value_value = 10; // For other maps
    extensions 5000 to max;
}

/*
message ValuePair {
    optional Value key = 1;
    optional Value value = 2;
}
*/

message NameValue {
    optional string name = 1;
    optional Value value = 2;
    optional int32 name_index = 3;
}

message Component {
    optional int32 type_index = 1; // Index of the type, if contained in a world with component_classes table
    optional string type = 15; // The name of the type. Not needed if index provided
    repeated NameValue field = 2;

    extensions 5000 to max;
}

message Entity {
    optional int64 id = 1;
    repeated Component component = 2;
    repeated int32 removed_component_index = 3 [packed=true];
    optional string parent_prefab = 4;
    optional bool alwaysRelevant = 5;
    optional int64 owner = 6;
    repeated string removed_component = 15;

    enum Scope {
        GLOBAL = 0;
        SECTOR = 1;
        CHUNK = 2;
    }
    optional Scope scope = 7;

    extensions 5000 to max;
}

message PackedEntity {
    optional int64 id = 1;
    repeated int32 componentId = 2 [packed=true];
    optional bytes componentFieldCounts = 3;
    optional bytes fieldIds = 4;
    repeated Value fieldValue = 5;
    repeated int32 removedComponent = 6 [packed=true];
    optional int64 owner = 7;
    optional string parentPrefabUri = 16;

    extensions 5000 to max;
}

message Prefab {
    optional int32 name_index = 1;
    repeated Component component = 2;
    repeated int32 deprecated = 3 [packed=true];
    optional bool persisted = 4 [default=true];
    repeated string removedComponent = 5;
    optional bool alwaysRelevant = 6;
    optional string name = 15;
    optional string parent_name = 16;

    extensions 5000 to max;
}

message Event {
    optional int32 type = 1;
    optional bytes fieldIds = 2;
    repeated Value fieldValue = 3;

    extensions 5000 to max;
}

message EntityStore {
    repeated Entity entity = 1;
    repeated string component_class = 3;

    // These are paired, with entityNamed referencing entity id
    repeated string entityName = 2;
    repeated int64  entityNamed = 4 [packed = true];

    extensions 5000 to max;
}

enum StoreType {
    PlayerStoreType           = 1;
    ChunkStoreType            = 2;
}

message PlayerStore {
    optional EntityStore store = 1;
    optional float characterPosX = 15;
    optional float characterPosY = 16;
    optional float characterPosZ = 17;
    optional bool hasCharacter = 18;

    extensions 5000 to max;
}

message ChunkStore {
    optional EntityStore store       = 1;
    optional sint32    x             = 2;
    optional sint32    y             = 3;
    optional sint32    z             = 4;

    optional int32 deprecated_data_3    = 5;

    optional bytes deprecated_data_4 = 6;
    optional bytes deprecated_data_1 = 7;
    optional bytes deprecated_data_2 = 8;
    optional bytes deprecated_data_5 = 9;
    
    optional RunLengthEncoding8 deprecated_data_6 = 11;

    optional RunLengthEncoding16 block_data = 10;
    optional RunLengthEncoding16 biome_data = 12;
    repeated RunLengthEncoding16 extra_data = 13;

    extensions 5000 to max;
}

message RunLengthEncoding16 {
    repeated sint32 runLengths = 1 [packed=true];
    repeated sint32 values = 2 [packed=true];

    extensions 5000 to max;
}

message RunLengthEncoding8 {
    repeated sint32 runLengths = 1 [packed=true];
    optional bytes values = 2;

    extensions 5000 to max;
}

message GlobalStore {
    repeated Entity entity = 1;
    repeated Prefab prefab = 2;
    repeated string component_class = 3;

    optional int64 next_entity_id = 16;
    repeated int64 deprecated_data_17 = 17 [packed=true];
    repeated string prefab_name = 18; // Table of prefabs, the index of which corresponds to Prefab's type_index
    // deprecated repeated entityStoreMetadata deprecated_data_19 = 19;

    extensions 5000 to max;
}
