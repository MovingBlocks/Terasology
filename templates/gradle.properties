# See https://stackoverflow.com/questions/45883963/gradle-4-0-does-not-display-executed-tasks-in-command-line
# In Jenkins builds will default to "plain" and rich/verbose logging doesn't print right at all
org.gradle.console=verbose

# These settings may speed up the execution of Gradle or otherwise affect performance (daemon is on by default)
org.gradle.parallel=false
org.gradle.configureondemand=false
org.gradle.jvmargs=-Xmx1024m

# This prevents the generic Maven publish from publishing sha files - https://github.com/gradle/gradle/issues/11308
# systemProp.org.gradle.internal.publish.checksums.insecure=true
# To pass via CLI use: -Dorg.gradle.internal.publish.checksums.insecure=true

# Alternative resolution repo to use - this can be used to ignore "live" artifacts and only accept experimental ones.
# alternativeResolutionRepo=http://artifactory.terasology.org/artifactory/virtual-nanoware-and-remote

# Credentials for publishing to Artifactory. Good for local testing
# mavenUser=
# mavenPass=

# Where to publish artifacts, if not to the default snapshot/release repos
# Publishing a snapshot to a release-only repo will get an intended but quirky HTTP 409 Conflict error as of Nov 2014
# publishRepo=nanoware-snapshot-local

# Details for code signing. Naturally these are secret and not committed :-)
# certificateFile=[path]/certum.jks
# certificateAlias=
# certificateStorePass=
# certificateKeyPass=

# GitHub credentials for Index testing
# indexerUsername=
# indexerPassword=

# If you want to work under a different GitHub account/org you can set it here
# There are two properties split out as modules & meta modules have the same name, so they can't share user/org
# alternativeGithubHome=Nanoware
# alternativeGithubMetaHome=Nanoware
