<!-- This file, when present as src/test/resources/logback-test.xml,
     configures log filters during test execution.

     To configure the logs generated while in-game, see
     facades/PC/src/main/resources/logback.xml
-->
<configuration debug="false">
  <!-- debug: reports all changes to this configuration on System.out -->

  <include resource="org/terasology/engine/logback/setup.xml" />

  <!-- JUnit collects console output during test execution
       and include it in the report for the test. -->
  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
    </encoder>

    <include resource="org/terasology/engine/logback/filter-reflections.xml" />
  </appender>

  <root level="${logOverrideLevel:-debug}">
    <appender-ref ref="CONSOLE" />
  </root>

  <!-- NOTE You can add fine granular custom log-level overrides here.
       This works in both ways; you can increase or decrease the log level
       for specific packages or classes.

       For example:

        <logger name="org.terasology.engine.world" level="debug" />
        <logger name="org.terasology.module.health.systems.HealthAuthoritySystem" level="error" />
  -->
  <logger name="org.terasology" level="${logOverrideLevel:-info}" />
  <logger name="org.terasology.engine.i18n" level="warn" />
  <logger name="org.reflections.Reflections" level="warn" />

</configuration>
