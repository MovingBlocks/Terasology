// Copyright 2020 The Terasology Foundation
// SPDX-License-Identifier: Apache-2.0

import org.reflections.Reflections
import org.reflections.scanners.SubTypesScanner
import org.reflections.scanners.TypeAnnotationsScanner
import org.reflections.util.ConfigurationBuilder

subprojects {
    // Hack for getting sourcesSets.main.output there. 
    plugins.apply('java')
    plugins.apply('idea')
    def sourceSets = project.getConvention().getPlugin(JavaPluginConvention.class).sourceSets

    
    sourceSets.main.java.outputDir = new File("$buildDir/classes")
    idea {
        module {
            // Change around the output a bit
            inheritOutputDirs = false
            outputDir = file('build/classes')
            testOutputDir = file('build/testClasses')
            downloadSources = true
        }
    }

    task cacheReflections {
        description = 'Caches reflection output to make regular startup faster. May go stale and need cleanup at times.'
        inputs.files sourceSets.main.output.classesDirs,
                // getClassesDir from all sourceSets (for any jvm (seems) language)
                configurations."${sourceSets.main.runtimeClasspathConfigurationName}"

        outputs.upToDateWhen {classes.state.upToDate}
        def outputDir = sourceSets.main.java.outputDir
        outputs.file("$outputDir/reflections.cache")
        dependsOn classes

        doLast {
            // Without the .mkdirs() we might hit a scenario where the classes dir doesn't exist yet
            Reflections reflections = new Reflections(new ConfigurationBuilder()
                    .filterInputsBy { it.startsWith('org/terasology/')}
                    .addUrls(inputs.files.collect { it.toURI().toURL() })
                    .setScanners(new TypeAnnotationsScanner(), new SubTypesScanner()))
            reflections.save("$outputDir/reflections.cache")
        }
    }
    tasks.getByName('jar').dependsOn('cacheReflections')
}
