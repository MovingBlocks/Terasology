// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Chunks.proto

package org.terasology.protobuf;

public final class ChunksProtobuf {
  private ChunksProtobuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum Type
      implements com.google.protobuf.ProtocolMessageEnum {
    Unknown(0, 0),
    DenseArray4Bit(1, 1),
    DenseArray8Bit(2, 2),
    DenseArray16Bit(3, 3),
    SparseArray4Bit(4, 4),
    SparseArray8Bit(5, 5),
    SparseArray16Bit(6, 6),
    ;
    
    public static final int Unknown_VALUE = 0;
    public static final int DenseArray4Bit_VALUE = 1;
    public static final int DenseArray8Bit_VALUE = 2;
    public static final int DenseArray16Bit_VALUE = 3;
    public static final int SparseArray4Bit_VALUE = 4;
    public static final int SparseArray8Bit_VALUE = 5;
    public static final int SparseArray16Bit_VALUE = 6;
    
    
    public final int getNumber() { return value; }
    
    public static Type valueOf(int value) {
      switch (value) {
        case 0: return Unknown;
        case 1: return DenseArray4Bit;
        case 2: return DenseArray8Bit;
        case 3: return DenseArray16Bit;
        case 4: return SparseArray4Bit;
        case 5: return SparseArray8Bit;
        case 6: return SparseArray16Bit;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.terasology.protobuf.ChunksProtobuf.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final Type[] VALUES = {
      Unknown, DenseArray4Bit, DenseArray8Bit, DenseArray16Bit, SparseArray4Bit, SparseArray8Bit, SparseArray16Bit, 
    };
    
    public static Type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private Type(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:Type)
  }
  
  public enum State
      implements com.google.protobuf.ProtocolMessageEnum {
    ADJACENCY_GENERATION_PENDING(0, 0),
    INTERNAL_LIGHT_GENERATION_PENDING(1, 1),
    LIGHT_PROPAGATION_PENDING(2, 2),
    FULL_LIGHT_CONNECTIVITY_PENDING(3, 3),
    COMPLETE(4, 4),
    ;
    
    public static final int ADJACENCY_GENERATION_PENDING_VALUE = 0;
    public static final int INTERNAL_LIGHT_GENERATION_PENDING_VALUE = 1;
    public static final int LIGHT_PROPAGATION_PENDING_VALUE = 2;
    public static final int FULL_LIGHT_CONNECTIVITY_PENDING_VALUE = 3;
    public static final int COMPLETE_VALUE = 4;
    
    
    public final int getNumber() { return value; }
    
    public static State valueOf(int value) {
      switch (value) {
        case 0: return ADJACENCY_GENERATION_PENDING;
        case 1: return INTERNAL_LIGHT_GENERATION_PENDING;
        case 2: return LIGHT_PROPAGATION_PENDING;
        case 3: return FULL_LIGHT_CONNECTIVITY_PENDING;
        case 4: return COMPLETE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<State>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<State>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<State>() {
            public State findValueByNumber(int number) {
              return State.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.terasology.protobuf.ChunksProtobuf.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final State[] VALUES = {
      ADJACENCY_GENERATION_PENDING, INTERNAL_LIGHT_GENERATION_PENDING, LIGHT_PROPAGATION_PENDING, FULL_LIGHT_CONNECTIVITY_PENDING, COMPLETE, 
    };
    
    public static State valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private State(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:State)
  }
  
  public interface TeraArrayOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .Type type = 1;
    boolean hasType();
    org.terasology.protobuf.ChunksProtobuf.Type getType();
    
    // optional string class_name = 2;
    boolean hasClassName();
    String getClassName();
    
    // optional bytes data = 3;
    boolean hasData();
    com.google.protobuf.ByteString getData();
  }
  public static final class TeraArray extends
      com.google.protobuf.GeneratedMessage
      implements TeraArrayOrBuilder {
    // Use TeraArray.newBuilder() to construct.
    private TeraArray(Builder builder) {
      super(builder);
    }
    private TeraArray(boolean noInit) {}
    
    private static final TeraArray defaultInstance;
    public static TeraArray getDefaultInstance() {
      return defaultInstance;
    }
    
    public TeraArray getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_TeraArray_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_TeraArray_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .Type type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.terasology.protobuf.ChunksProtobuf.Type type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.terasology.protobuf.ChunksProtobuf.Type getType() {
      return type_;
    }
    
    // optional string class_name = 2;
    public static final int CLASS_NAME_FIELD_NUMBER = 2;
    private java.lang.Object className_;
    public boolean hasClassName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getClassName() {
      java.lang.Object ref = className_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          className_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getClassNameBytes() {
      java.lang.Object ref = className_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        className_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bytes data = 3;
    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    
    private void initFields() {
      type_ = org.terasology.protobuf.ChunksProtobuf.Type.Unknown;
      className_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getClassNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, data_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getClassNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.terasology.protobuf.ChunksProtobuf.TeraArray prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_TeraArray_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_TeraArray_fieldAccessorTable;
      }
      
      // Construct using org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = org.terasology.protobuf.ChunksProtobuf.Type.Unknown;
        bitField0_ = (bitField0_ & ~0x00000001);
        className_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.terasology.protobuf.ChunksProtobuf.TeraArray.getDescriptor();
      }
      
      public org.terasology.protobuf.ChunksProtobuf.TeraArray getDefaultInstanceForType() {
        return org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      }
      
      public org.terasology.protobuf.ChunksProtobuf.TeraArray build() {
        org.terasology.protobuf.ChunksProtobuf.TeraArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.terasology.protobuf.ChunksProtobuf.TeraArray buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.terasology.protobuf.ChunksProtobuf.TeraArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.terasology.protobuf.ChunksProtobuf.TeraArray buildPartial() {
        org.terasology.protobuf.ChunksProtobuf.TeraArray result = new org.terasology.protobuf.ChunksProtobuf.TeraArray(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.className_ = className_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.terasology.protobuf.ChunksProtobuf.TeraArray) {
          return mergeFrom((org.terasology.protobuf.ChunksProtobuf.TeraArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.terasology.protobuf.ChunksProtobuf.TeraArray other) {
        if (other == org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasClassName()) {
          setClassName(other.getClassName());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.terasology.protobuf.ChunksProtobuf.Type value = org.terasology.protobuf.ChunksProtobuf.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              className_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              data_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .Type type = 1;
      private org.terasology.protobuf.ChunksProtobuf.Type type_ = org.terasology.protobuf.ChunksProtobuf.Type.Unknown;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.terasology.protobuf.ChunksProtobuf.Type getType() {
        return type_;
      }
      public Builder setType(org.terasology.protobuf.ChunksProtobuf.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.terasology.protobuf.ChunksProtobuf.Type.Unknown;
        onChanged();
        return this;
      }
      
      // optional string class_name = 2;
      private java.lang.Object className_ = "";
      public boolean hasClassName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getClassName() {
        java.lang.Object ref = className_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          className_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setClassName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        className_ = value;
        onChanged();
        return this;
      }
      public Builder clearClassName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        className_ = getDefaultInstance().getClassName();
        onChanged();
        return this;
      }
      void setClassName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        className_ = value;
        onChanged();
      }
      
      // optional bytes data = 3;
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        data_ = value;
        onChanged();
        return this;
      }
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TeraArray)
    }
    
    static {
      defaultInstance = new TeraArray(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TeraArray)
  }
  
  public interface ModDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string id = 1;
    boolean hasId();
    String getId();
    
    // optional .TeraArray data = 2;
    boolean hasData();
    org.terasology.protobuf.ChunksProtobuf.TeraArray getData();
    org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getDataOrBuilder();
  }
  public static final class ModData extends
      com.google.protobuf.GeneratedMessage
      implements ModDataOrBuilder {
    // Use ModData.newBuilder() to construct.
    private ModData(Builder builder) {
      super(builder);
    }
    private ModData(boolean noInit) {}
    
    private static final ModData defaultInstance;
    public static ModData getDefaultInstance() {
      return defaultInstance;
    }
    
    public ModData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_ModData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_ModData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          id_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .TeraArray data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private org.terasology.protobuf.ChunksProtobuf.TeraArray data_;
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArray getData() {
      return data_;
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getDataOrBuilder() {
      return data_;
    }
    
    private void initFields() {
      id_ = "";
      data_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, data_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.terasology.protobuf.ChunksProtobuf.ModData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_ModData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_ModData_fieldAccessorTable;
      }
      
      // Construct using org.terasology.protobuf.ChunksProtobuf.ModData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dataBuilder_ == null) {
          data_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
        } else {
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.terasology.protobuf.ChunksProtobuf.ModData.getDescriptor();
      }
      
      public org.terasology.protobuf.ChunksProtobuf.ModData getDefaultInstanceForType() {
        return org.terasology.protobuf.ChunksProtobuf.ModData.getDefaultInstance();
      }
      
      public org.terasology.protobuf.ChunksProtobuf.ModData build() {
        org.terasology.protobuf.ChunksProtobuf.ModData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.terasology.protobuf.ChunksProtobuf.ModData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.terasology.protobuf.ChunksProtobuf.ModData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.terasology.protobuf.ChunksProtobuf.ModData buildPartial() {
        org.terasology.protobuf.ChunksProtobuf.ModData result = new org.terasology.protobuf.ChunksProtobuf.ModData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.terasology.protobuf.ChunksProtobuf.ModData) {
          return mergeFrom((org.terasology.protobuf.ChunksProtobuf.ModData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.terasology.protobuf.ChunksProtobuf.ModData other) {
        if (other == org.terasology.protobuf.ChunksProtobuf.ModData.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 18: {
              org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder subBuilder = org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder();
              if (hasData()) {
                subBuilder.mergeFrom(getData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string id = 1;
      private java.lang.Object id_ = "";
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      void setId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
      }
      
      // optional .TeraArray data = 2;
      private org.terasology.protobuf.ChunksProtobuf.TeraArray data_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> dataBuilder_;
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray getData() {
        if (dataBuilder_ == null) {
          return data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      public Builder setData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setData(
          org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              data_ != org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) {
            data_ =
              org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder getDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder>(
                  data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:ModData)
    }
    
    static {
      defaultInstance = new ModData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ModData)
  }
  
  public interface ChunkOrBuilder extends
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<Chunk> {
    
    // optional sint32 x = 1;
    boolean hasX();
    int getX();
    
    // optional sint32 y = 2;
    boolean hasY();
    int getY();
    
    // optional sint32 z = 3;
    boolean hasZ();
    int getZ();
    
    // optional uint32 state = 4;
    boolean hasState();
    int getState();
    
    // optional .TeraArray block_data = 5;
    boolean hasBlockData();
    org.terasology.protobuf.ChunksProtobuf.TeraArray getBlockData();
    org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getBlockDataOrBuilder();
    
    // optional .TeraArray sunlight_data = 6;
    boolean hasSunlightData();
    org.terasology.protobuf.ChunksProtobuf.TeraArray getSunlightData();
    org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getSunlightDataOrBuilder();
    
    // optional .TeraArray light_data = 7;
    boolean hasLightData();
    org.terasology.protobuf.ChunksProtobuf.TeraArray getLightData();
    org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getLightDataOrBuilder();
    
    // optional .TeraArray extra_data = 8;
    boolean hasExtraData();
    org.terasology.protobuf.ChunksProtobuf.TeraArray getExtraData();
    org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getExtraDataOrBuilder();
    
    // repeated .ModData mod_data = 9;
    java.util.List<org.terasology.protobuf.ChunksProtobuf.ModData> 
        getModDataList();
    org.terasology.protobuf.ChunksProtobuf.ModData getModData(int index);
    int getModDataCount();
    java.util.List<? extends org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder> 
        getModDataOrBuilderList();
    org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder getModDataOrBuilder(
        int index);
  }
  public static final class Chunk extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        Chunk> implements ChunkOrBuilder {
    // Use Chunk.newBuilder() to construct.
    private Chunk(Builder builder) {
      super(builder);
    }
    private Chunk(boolean noInit) {}
    
    private static final Chunk defaultInstance;
    public static Chunk getDefaultInstance() {
      return defaultInstance;
    }
    
    public Chunk getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_Chunk_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_Chunk_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional sint32 x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getX() {
      return x_;
    }
    
    // optional sint32 y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getY() {
      return y_;
    }
    
    // optional sint32 z = 3;
    public static final int Z_FIELD_NUMBER = 3;
    private int z_;
    public boolean hasZ() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getZ() {
      return z_;
    }
    
    // optional uint32 state = 4;
    public static final int STATE_FIELD_NUMBER = 4;
    private int state_;
    public boolean hasState() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getState() {
      return state_;
    }
    
    // optional .TeraArray block_data = 5;
    public static final int BLOCK_DATA_FIELD_NUMBER = 5;
    private org.terasology.protobuf.ChunksProtobuf.TeraArray blockData_;
    public boolean hasBlockData() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArray getBlockData() {
      return blockData_;
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getBlockDataOrBuilder() {
      return blockData_;
    }
    
    // optional .TeraArray sunlight_data = 6;
    public static final int SUNLIGHT_DATA_FIELD_NUMBER = 6;
    private org.terasology.protobuf.ChunksProtobuf.TeraArray sunlightData_;
    public boolean hasSunlightData() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArray getSunlightData() {
      return sunlightData_;
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getSunlightDataOrBuilder() {
      return sunlightData_;
    }
    
    // optional .TeraArray light_data = 7;
    public static final int LIGHT_DATA_FIELD_NUMBER = 7;
    private org.terasology.protobuf.ChunksProtobuf.TeraArray lightData_;
    public boolean hasLightData() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArray getLightData() {
      return lightData_;
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getLightDataOrBuilder() {
      return lightData_;
    }
    
    // optional .TeraArray extra_data = 8;
    public static final int EXTRA_DATA_FIELD_NUMBER = 8;
    private org.terasology.protobuf.ChunksProtobuf.TeraArray extraData_;
    public boolean hasExtraData() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArray getExtraData() {
      return extraData_;
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getExtraDataOrBuilder() {
      return extraData_;
    }
    
    // repeated .ModData mod_data = 9;
    public static final int MOD_DATA_FIELD_NUMBER = 9;
    private java.util.List<org.terasology.protobuf.ChunksProtobuf.ModData> modData_;
    public java.util.List<org.terasology.protobuf.ChunksProtobuf.ModData> getModDataList() {
      return modData_;
    }
    public java.util.List<? extends org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder> 
        getModDataOrBuilderList() {
      return modData_;
    }
    public int getModDataCount() {
      return modData_.size();
    }
    public org.terasology.protobuf.ChunksProtobuf.ModData getModData(int index) {
      return modData_.get(index);
    }
    public org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder getModDataOrBuilder(
        int index) {
      return modData_.get(index);
    }
    
    private void initFields() {
      x_ = 0;
      y_ = 0;
      z_ = 0;
      state_ = 0;
      blockData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      sunlightData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      lightData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      extraData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      modData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<org.terasology.protobuf.ChunksProtobuf.Chunk>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, z_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, state_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, blockData_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, sunlightData_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, lightData_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, extraData_);
      }
      for (int i = 0; i < modData_.size(); i++) {
        output.writeMessage(9, modData_.get(i));
      }
      extensionWriter.writeUntil(1001, output);
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, z_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, state_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, blockData_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, sunlightData_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, lightData_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, extraData_);
      }
      for (int i = 0; i < modData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, modData_.get(i));
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.terasology.protobuf.ChunksProtobuf.Chunk prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          org.terasology.protobuf.ChunksProtobuf.Chunk, Builder> implements org.terasology.protobuf.ChunksProtobuf.ChunkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_Chunk_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_Chunk_fieldAccessorTable;
      }
      
      // Construct using org.terasology.protobuf.ChunksProtobuf.Chunk.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBlockDataFieldBuilder();
          getSunlightDataFieldBuilder();
          getLightDataFieldBuilder();
          getExtraDataFieldBuilder();
          getModDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        z_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (blockDataBuilder_ == null) {
          blockData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
        } else {
          blockDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (sunlightDataBuilder_ == null) {
          sunlightData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
        } else {
          sunlightDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (lightDataBuilder_ == null) {
          lightData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
        } else {
          lightDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (extraDataBuilder_ == null) {
          extraData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
        } else {
          extraDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (modDataBuilder_ == null) {
          modData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          modDataBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.terasology.protobuf.ChunksProtobuf.Chunk.getDescriptor();
      }
      
      public org.terasology.protobuf.ChunksProtobuf.Chunk getDefaultInstanceForType() {
        return org.terasology.protobuf.ChunksProtobuf.Chunk.getDefaultInstance();
      }
      
      public org.terasology.protobuf.ChunksProtobuf.Chunk build() {
        org.terasology.protobuf.ChunksProtobuf.Chunk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.terasology.protobuf.ChunksProtobuf.Chunk buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.terasology.protobuf.ChunksProtobuf.Chunk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.terasology.protobuf.ChunksProtobuf.Chunk buildPartial() {
        org.terasology.protobuf.ChunksProtobuf.Chunk result = new org.terasology.protobuf.ChunksProtobuf.Chunk(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.z_ = z_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (blockDataBuilder_ == null) {
          result.blockData_ = blockData_;
        } else {
          result.blockData_ = blockDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (sunlightDataBuilder_ == null) {
          result.sunlightData_ = sunlightData_;
        } else {
          result.sunlightData_ = sunlightDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (lightDataBuilder_ == null) {
          result.lightData_ = lightData_;
        } else {
          result.lightData_ = lightDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (extraDataBuilder_ == null) {
          result.extraData_ = extraData_;
        } else {
          result.extraData_ = extraDataBuilder_.build();
        }
        if (modDataBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            modData_ = java.util.Collections.unmodifiableList(modData_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.modData_ = modData_;
        } else {
          result.modData_ = modDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.terasology.protobuf.ChunksProtobuf.Chunk) {
          return mergeFrom((org.terasology.protobuf.ChunksProtobuf.Chunk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.terasology.protobuf.ChunksProtobuf.Chunk other) {
        if (other == org.terasology.protobuf.ChunksProtobuf.Chunk.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasBlockData()) {
          mergeBlockData(other.getBlockData());
        }
        if (other.hasSunlightData()) {
          mergeSunlightData(other.getSunlightData());
        }
        if (other.hasLightData()) {
          mergeLightData(other.getLightData());
        }
        if (other.hasExtraData()) {
          mergeExtraData(other.getExtraData());
        }
        if (modDataBuilder_ == null) {
          if (!other.modData_.isEmpty()) {
            if (modData_.isEmpty()) {
              modData_ = other.modData_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureModDataIsMutable();
              modData_.addAll(other.modData_);
            }
            onChanged();
          }
        } else {
          if (!other.modData_.isEmpty()) {
            if (modDataBuilder_.isEmpty()) {
              modDataBuilder_.dispose();
              modDataBuilder_ = null;
              modData_ = other.modData_;
              bitField0_ = (bitField0_ & ~0x00000100);
              modDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getModDataFieldBuilder() : null;
            } else {
              modDataBuilder_.addAllMessages(other.modData_);
            }
          }
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              y_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              z_ = input.readSInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              state_ = input.readUInt32();
              break;
            }
            case 42: {
              org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder subBuilder = org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder();
              if (hasBlockData()) {
                subBuilder.mergeFrom(getBlockData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBlockData(subBuilder.buildPartial());
              break;
            }
            case 50: {
              org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder subBuilder = org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder();
              if (hasSunlightData()) {
                subBuilder.mergeFrom(getSunlightData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSunlightData(subBuilder.buildPartial());
              break;
            }
            case 58: {
              org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder subBuilder = org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder();
              if (hasLightData()) {
                subBuilder.mergeFrom(getLightData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLightData(subBuilder.buildPartial());
              break;
            }
            case 66: {
              org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder subBuilder = org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder();
              if (hasExtraData()) {
                subBuilder.mergeFrom(getExtraData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setExtraData(subBuilder.buildPartial());
              break;
            }
            case 74: {
              org.terasology.protobuf.ChunksProtobuf.ModData.Builder subBuilder = org.terasology.protobuf.ChunksProtobuf.ModData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addModData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional sint32 x = 1;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        onChanged();
        return this;
      }
      
      // optional sint32 y = 2;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        onChanged();
        return this;
      }
      
      // optional sint32 z = 3;
      private int z_ ;
      public boolean hasZ() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getZ() {
        return z_;
      }
      public Builder setZ(int value) {
        bitField0_ |= 0x00000004;
        z_ = value;
        onChanged();
        return this;
      }
      public Builder clearZ() {
        bitField0_ = (bitField0_ & ~0x00000004);
        z_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 state = 4;
      private int state_ ;
      public boolean hasState() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getState() {
        return state_;
      }
      public Builder setState(int value) {
        bitField0_ |= 0x00000008;
        state_ = value;
        onChanged();
        return this;
      }
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000008);
        state_ = 0;
        onChanged();
        return this;
      }
      
      // optional .TeraArray block_data = 5;
      private org.terasology.protobuf.ChunksProtobuf.TeraArray blockData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> blockDataBuilder_;
      public boolean hasBlockData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray getBlockData() {
        if (blockDataBuilder_ == null) {
          return blockData_;
        } else {
          return blockDataBuilder_.getMessage();
        }
      }
      public Builder setBlockData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (blockDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          blockData_ = value;
          onChanged();
        } else {
          blockDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setBlockData(
          org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder builderForValue) {
        if (blockDataBuilder_ == null) {
          blockData_ = builderForValue.build();
          onChanged();
        } else {
          blockDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeBlockData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (blockDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              blockData_ != org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) {
            blockData_ =
              org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder(blockData_).mergeFrom(value).buildPartial();
          } else {
            blockData_ = value;
          }
          onChanged();
        } else {
          blockDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearBlockData() {
        if (blockDataBuilder_ == null) {
          blockData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
          onChanged();
        } else {
          blockDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder getBlockDataBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getBlockDataFieldBuilder().getBuilder();
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getBlockDataOrBuilder() {
        if (blockDataBuilder_ != null) {
          return blockDataBuilder_.getMessageOrBuilder();
        } else {
          return blockData_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> 
          getBlockDataFieldBuilder() {
        if (blockDataBuilder_ == null) {
          blockDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder>(
                  blockData_,
                  getParentForChildren(),
                  isClean());
          blockData_ = null;
        }
        return blockDataBuilder_;
      }
      
      // optional .TeraArray sunlight_data = 6;
      private org.terasology.protobuf.ChunksProtobuf.TeraArray sunlightData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> sunlightDataBuilder_;
      public boolean hasSunlightData() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray getSunlightData() {
        if (sunlightDataBuilder_ == null) {
          return sunlightData_;
        } else {
          return sunlightDataBuilder_.getMessage();
        }
      }
      public Builder setSunlightData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (sunlightDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sunlightData_ = value;
          onChanged();
        } else {
          sunlightDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder setSunlightData(
          org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder builderForValue) {
        if (sunlightDataBuilder_ == null) {
          sunlightData_ = builderForValue.build();
          onChanged();
        } else {
          sunlightDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder mergeSunlightData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (sunlightDataBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              sunlightData_ != org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) {
            sunlightData_ =
              org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder(sunlightData_).mergeFrom(value).buildPartial();
          } else {
            sunlightData_ = value;
          }
          onChanged();
        } else {
          sunlightDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder clearSunlightData() {
        if (sunlightDataBuilder_ == null) {
          sunlightData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
          onChanged();
        } else {
          sunlightDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder getSunlightDataBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getSunlightDataFieldBuilder().getBuilder();
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getSunlightDataOrBuilder() {
        if (sunlightDataBuilder_ != null) {
          return sunlightDataBuilder_.getMessageOrBuilder();
        } else {
          return sunlightData_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> 
          getSunlightDataFieldBuilder() {
        if (sunlightDataBuilder_ == null) {
          sunlightDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder>(
                  sunlightData_,
                  getParentForChildren(),
                  isClean());
          sunlightData_ = null;
        }
        return sunlightDataBuilder_;
      }
      
      // optional .TeraArray light_data = 7;
      private org.terasology.protobuf.ChunksProtobuf.TeraArray lightData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> lightDataBuilder_;
      public boolean hasLightData() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray getLightData() {
        if (lightDataBuilder_ == null) {
          return lightData_;
        } else {
          return lightDataBuilder_.getMessage();
        }
      }
      public Builder setLightData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (lightDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lightData_ = value;
          onChanged();
        } else {
          lightDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder setLightData(
          org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder builderForValue) {
        if (lightDataBuilder_ == null) {
          lightData_ = builderForValue.build();
          onChanged();
        } else {
          lightDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder mergeLightData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (lightDataBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              lightData_ != org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) {
            lightData_ =
              org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder(lightData_).mergeFrom(value).buildPartial();
          } else {
            lightData_ = value;
          }
          onChanged();
        } else {
          lightDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder clearLightData() {
        if (lightDataBuilder_ == null) {
          lightData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
          onChanged();
        } else {
          lightDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder getLightDataBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getLightDataFieldBuilder().getBuilder();
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getLightDataOrBuilder() {
        if (lightDataBuilder_ != null) {
          return lightDataBuilder_.getMessageOrBuilder();
        } else {
          return lightData_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> 
          getLightDataFieldBuilder() {
        if (lightDataBuilder_ == null) {
          lightDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder>(
                  lightData_,
                  getParentForChildren(),
                  isClean());
          lightData_ = null;
        }
        return lightDataBuilder_;
      }
      
      // optional .TeraArray extra_data = 8;
      private org.terasology.protobuf.ChunksProtobuf.TeraArray extraData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> extraDataBuilder_;
      public boolean hasExtraData() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray getExtraData() {
        if (extraDataBuilder_ == null) {
          return extraData_;
        } else {
          return extraDataBuilder_.getMessage();
        }
      }
      public Builder setExtraData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (extraDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          extraData_ = value;
          onChanged();
        } else {
          extraDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder setExtraData(
          org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder builderForValue) {
        if (extraDataBuilder_ == null) {
          extraData_ = builderForValue.build();
          onChanged();
        } else {
          extraDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder mergeExtraData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (extraDataBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              extraData_ != org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) {
            extraData_ =
              org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder(extraData_).mergeFrom(value).buildPartial();
          } else {
            extraData_ = value;
          }
          onChanged();
        } else {
          extraDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder clearExtraData() {
        if (extraDataBuilder_ == null) {
          extraData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
          onChanged();
        } else {
          extraDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder getExtraDataBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getExtraDataFieldBuilder().getBuilder();
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getExtraDataOrBuilder() {
        if (extraDataBuilder_ != null) {
          return extraDataBuilder_.getMessageOrBuilder();
        } else {
          return extraData_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> 
          getExtraDataFieldBuilder() {
        if (extraDataBuilder_ == null) {
          extraDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder>(
                  extraData_,
                  getParentForChildren(),
                  isClean());
          extraData_ = null;
        }
        return extraDataBuilder_;
      }
      
      // repeated .ModData mod_data = 9;
      private java.util.List<org.terasology.protobuf.ChunksProtobuf.ModData> modData_ =
        java.util.Collections.emptyList();
      private void ensureModDataIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          modData_ = new java.util.ArrayList<org.terasology.protobuf.ChunksProtobuf.ModData>(modData_);
          bitField0_ |= 0x00000100;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.ModData, org.terasology.protobuf.ChunksProtobuf.ModData.Builder, org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder> modDataBuilder_;
      
      public java.util.List<org.terasology.protobuf.ChunksProtobuf.ModData> getModDataList() {
        if (modDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(modData_);
        } else {
          return modDataBuilder_.getMessageList();
        }
      }
      public int getModDataCount() {
        if (modDataBuilder_ == null) {
          return modData_.size();
        } else {
          return modDataBuilder_.getCount();
        }
      }
      public org.terasology.protobuf.ChunksProtobuf.ModData getModData(int index) {
        if (modDataBuilder_ == null) {
          return modData_.get(index);
        } else {
          return modDataBuilder_.getMessage(index);
        }
      }
      public Builder setModData(
          int index, org.terasology.protobuf.ChunksProtobuf.ModData value) {
        if (modDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModDataIsMutable();
          modData_.set(index, value);
          onChanged();
        } else {
          modDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setModData(
          int index, org.terasology.protobuf.ChunksProtobuf.ModData.Builder builderForValue) {
        if (modDataBuilder_ == null) {
          ensureModDataIsMutable();
          modData_.set(index, builderForValue.build());
          onChanged();
        } else {
          modDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addModData(org.terasology.protobuf.ChunksProtobuf.ModData value) {
        if (modDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModDataIsMutable();
          modData_.add(value);
          onChanged();
        } else {
          modDataBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addModData(
          int index, org.terasology.protobuf.ChunksProtobuf.ModData value) {
        if (modDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModDataIsMutable();
          modData_.add(index, value);
          onChanged();
        } else {
          modDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addModData(
          org.terasology.protobuf.ChunksProtobuf.ModData.Builder builderForValue) {
        if (modDataBuilder_ == null) {
          ensureModDataIsMutable();
          modData_.add(builderForValue.build());
          onChanged();
        } else {
          modDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addModData(
          int index, org.terasology.protobuf.ChunksProtobuf.ModData.Builder builderForValue) {
        if (modDataBuilder_ == null) {
          ensureModDataIsMutable();
          modData_.add(index, builderForValue.build());
          onChanged();
        } else {
          modDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllModData(
          java.lang.Iterable<? extends org.terasology.protobuf.ChunksProtobuf.ModData> values) {
        if (modDataBuilder_ == null) {
          ensureModDataIsMutable();
          super.addAll(values, modData_);
          onChanged();
        } else {
          modDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearModData() {
        if (modDataBuilder_ == null) {
          modData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          modDataBuilder_.clear();
        }
        return this;
      }
      public Builder removeModData(int index) {
        if (modDataBuilder_ == null) {
          ensureModDataIsMutable();
          modData_.remove(index);
          onChanged();
        } else {
          modDataBuilder_.remove(index);
        }
        return this;
      }
      public org.terasology.protobuf.ChunksProtobuf.ModData.Builder getModDataBuilder(
          int index) {
        return getModDataFieldBuilder().getBuilder(index);
      }
      public org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder getModDataOrBuilder(
          int index) {
        if (modDataBuilder_ == null) {
          return modData_.get(index);  } else {
          return modDataBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder> 
           getModDataOrBuilderList() {
        if (modDataBuilder_ != null) {
          return modDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(modData_);
        }
      }
      public org.terasology.protobuf.ChunksProtobuf.ModData.Builder addModDataBuilder() {
        return getModDataFieldBuilder().addBuilder(
            org.terasology.protobuf.ChunksProtobuf.ModData.getDefaultInstance());
      }
      public org.terasology.protobuf.ChunksProtobuf.ModData.Builder addModDataBuilder(
          int index) {
        return getModDataFieldBuilder().addBuilder(
            index, org.terasology.protobuf.ChunksProtobuf.ModData.getDefaultInstance());
      }
      public java.util.List<org.terasology.protobuf.ChunksProtobuf.ModData.Builder> 
           getModDataBuilderList() {
        return getModDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.ModData, org.terasology.protobuf.ChunksProtobuf.ModData.Builder, org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder> 
          getModDataFieldBuilder() {
        if (modDataBuilder_ == null) {
          modDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.ModData, org.terasology.protobuf.ChunksProtobuf.ModData.Builder, org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder>(
                  modData_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          modData_ = null;
        }
        return modDataBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:Chunk)
    }
    
    static {
      defaultInstance = new Chunk(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Chunk)
  }
  
  public interface CompressedChunksOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .CompressedChunks.CompressionMethod method = 1 [default = GZIP];
    boolean hasMethod();
    org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressionMethod getMethod();
    
    // repeated .CompressedChunks.CompressedChunk chunks = 2;
    java.util.List<org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk> 
        getChunksList();
    org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk getChunks(int index);
    int getChunksCount();
    java.util.List<? extends org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunkOrBuilder> 
        getChunksOrBuilderList();
    org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunkOrBuilder getChunksOrBuilder(
        int index);
  }
  public static final class CompressedChunks extends
      com.google.protobuf.GeneratedMessage
      implements CompressedChunksOrBuilder {
    // Use CompressedChunks.newBuilder() to construct.
    private CompressedChunks(Builder builder) {
      super(builder);
    }
    private CompressedChunks(boolean noInit) {}
    
    private static final CompressedChunks defaultInstance;
    public static CompressedChunks getDefaultInstance() {
      return defaultInstance;
    }
    
    public CompressedChunks getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_CompressedChunks_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_CompressedChunks_fieldAccessorTable;
    }
    
    public enum CompressionMethod
        implements com.google.protobuf.ProtocolMessageEnum {
      GZIP(0, 0),
      ;
      
      public static final int GZIP_VALUE = 0;
      
      
      public final int getNumber() { return value; }
      
      public static CompressionMethod valueOf(int value) {
        switch (value) {
          case 0: return GZIP;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<CompressionMethod>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<CompressionMethod>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CompressionMethod>() {
              public CompressionMethod findValueByNumber(int number) {
                return CompressionMethod.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.terasology.protobuf.ChunksProtobuf.CompressedChunks.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final CompressionMethod[] VALUES = {
        GZIP, 
      };
      
      public static CompressionMethod valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private CompressionMethod(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:CompressedChunks.CompressionMethod)
    }
    
    public interface CompressedChunkOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional sint32 x = 1;
      boolean hasX();
      int getX();
      
      // optional sint32 y = 2;
      boolean hasY();
      int getY();
      
      // optional sint32 z = 3;
      boolean hasZ();
      int getZ();
      
      // optional bytes data = 4;
      boolean hasData();
      com.google.protobuf.ByteString getData();
    }
    public static final class CompressedChunk extends
        com.google.protobuf.GeneratedMessage
        implements CompressedChunkOrBuilder {
      // Use CompressedChunk.newBuilder() to construct.
      private CompressedChunk(Builder builder) {
        super(builder);
      }
      private CompressedChunk(boolean noInit) {}
      
      private static final CompressedChunk defaultInstance;
      public static CompressedChunk getDefaultInstance() {
        return defaultInstance;
      }
      
      public CompressedChunk getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_CompressedChunks_CompressedChunk_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_CompressedChunks_CompressedChunk_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional sint32 x = 1;
      public static final int X_FIELD_NUMBER = 1;
      private int x_;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getX() {
        return x_;
      }
      
      // optional sint32 y = 2;
      public static final int Y_FIELD_NUMBER = 2;
      private int y_;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getY() {
        return y_;
      }
      
      // optional sint32 z = 3;
      public static final int Z_FIELD_NUMBER = 3;
      private int z_;
      public boolean hasZ() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getZ() {
        return z_;
      }
      
      // optional bytes data = 4;
      public static final int DATA_FIELD_NUMBER = 4;
      private com.google.protobuf.ByteString data_;
      public boolean hasData() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      
      private void initFields() {
        x_ = 0;
        y_ = 0;
        z_ = 0;
        data_ = com.google.protobuf.ByteString.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeSInt32(1, x_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeSInt32(2, y_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeSInt32(3, z_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, data_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(1, x_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(2, y_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(3, z_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, data_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunkOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.terasology.protobuf.ChunksProtobuf.internal_static_CompressedChunks_CompressedChunk_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.terasology.protobuf.ChunksProtobuf.internal_static_CompressedChunks_CompressedChunk_fieldAccessorTable;
        }
        
        // Construct using org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          x_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          y_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          z_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          data_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.getDescriptor();
        }
        
        public org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk getDefaultInstanceForType() {
          return org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.getDefaultInstance();
        }
        
        public org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk build() {
          org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk buildPartial() {
          org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk result = new org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.x_ = x_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.y_ = y_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.z_ = z_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.data_ = data_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk) {
            return mergeFrom((org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk other) {
          if (other == org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasZ()) {
            setZ(other.getZ());
          }
          if (other.hasData()) {
            setData(other.getData());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                x_ = input.readSInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                y_ = input.readSInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                z_ = input.readSInt32();
                break;
              }
              case 34: {
                bitField0_ |= 0x00000008;
                data_ = input.readBytes();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional sint32 x = 1;
        private int x_ ;
        public boolean hasX() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getX() {
          return x_;
        }
        public Builder setX(int value) {
          bitField0_ |= 0x00000001;
          x_ = value;
          onChanged();
          return this;
        }
        public Builder clearX() {
          bitField0_ = (bitField0_ & ~0x00000001);
          x_ = 0;
          onChanged();
          return this;
        }
        
        // optional sint32 y = 2;
        private int y_ ;
        public boolean hasY() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getY() {
          return y_;
        }
        public Builder setY(int value) {
          bitField0_ |= 0x00000002;
          y_ = value;
          onChanged();
          return this;
        }
        public Builder clearY() {
          bitField0_ = (bitField0_ & ~0x00000002);
          y_ = 0;
          onChanged();
          return this;
        }
        
        // optional sint32 z = 3;
        private int z_ ;
        public boolean hasZ() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public int getZ() {
          return z_;
        }
        public Builder setZ(int value) {
          bitField0_ |= 0x00000004;
          z_ = value;
          onChanged();
          return this;
        }
        public Builder clearZ() {
          bitField0_ = (bitField0_ & ~0x00000004);
          z_ = 0;
          onChanged();
          return this;
        }
        
        // optional bytes data = 4;
        private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
        public boolean hasData() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public com.google.protobuf.ByteString getData() {
          return data_;
        }
        public Builder setData(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          data_ = value;
          onChanged();
          return this;
        }
        public Builder clearData() {
          bitField0_ = (bitField0_ & ~0x00000008);
          data_ = getDefaultInstance().getData();
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:CompressedChunks.CompressedChunk)
      }
      
      static {
        defaultInstance = new CompressedChunk(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:CompressedChunks.CompressedChunk)
    }
    
    private int bitField0_;
    // optional .CompressedChunks.CompressionMethod method = 1 [default = GZIP];
    public static final int METHOD_FIELD_NUMBER = 1;
    private org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressionMethod method_;
    public boolean hasMethod() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressionMethod getMethod() {
      return method_;
    }
    
    // repeated .CompressedChunks.CompressedChunk chunks = 2;
    public static final int CHUNKS_FIELD_NUMBER = 2;
    private java.util.List<org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk> chunks_;
    public java.util.List<org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk> getChunksList() {
      return chunks_;
    }
    public java.util.List<? extends org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunkOrBuilder> 
        getChunksOrBuilderList() {
      return chunks_;
    }
    public int getChunksCount() {
      return chunks_.size();
    }
    public org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk getChunks(int index) {
      return chunks_.get(index);
    }
    public org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunkOrBuilder getChunksOrBuilder(
        int index) {
      return chunks_.get(index);
    }
    
    private void initFields() {
      method_ = org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressionMethod.GZIP;
      chunks_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, method_.getNumber());
      }
      for (int i = 0; i < chunks_.size(); i++) {
        output.writeMessage(2, chunks_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, method_.getNumber());
      }
      for (int i = 0; i < chunks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, chunks_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.CompressedChunks parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.terasology.protobuf.ChunksProtobuf.CompressedChunks prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.terasology.protobuf.ChunksProtobuf.CompressedChunksOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_CompressedChunks_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_CompressedChunks_fieldAccessorTable;
      }
      
      // Construct using org.terasology.protobuf.ChunksProtobuf.CompressedChunks.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChunksFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        method_ = org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressionMethod.GZIP;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (chunksBuilder_ == null) {
          chunks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          chunksBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.terasology.protobuf.ChunksProtobuf.CompressedChunks.getDescriptor();
      }
      
      public org.terasology.protobuf.ChunksProtobuf.CompressedChunks getDefaultInstanceForType() {
        return org.terasology.protobuf.ChunksProtobuf.CompressedChunks.getDefaultInstance();
      }
      
      public org.terasology.protobuf.ChunksProtobuf.CompressedChunks build() {
        org.terasology.protobuf.ChunksProtobuf.CompressedChunks result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.terasology.protobuf.ChunksProtobuf.CompressedChunks buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.terasology.protobuf.ChunksProtobuf.CompressedChunks result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.terasology.protobuf.ChunksProtobuf.CompressedChunks buildPartial() {
        org.terasology.protobuf.ChunksProtobuf.CompressedChunks result = new org.terasology.protobuf.ChunksProtobuf.CompressedChunks(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.method_ = method_;
        if (chunksBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            chunks_ = java.util.Collections.unmodifiableList(chunks_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.chunks_ = chunks_;
        } else {
          result.chunks_ = chunksBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.terasology.protobuf.ChunksProtobuf.CompressedChunks) {
          return mergeFrom((org.terasology.protobuf.ChunksProtobuf.CompressedChunks)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.terasology.protobuf.ChunksProtobuf.CompressedChunks other) {
        if (other == org.terasology.protobuf.ChunksProtobuf.CompressedChunks.getDefaultInstance()) return this;
        if (other.hasMethod()) {
          setMethod(other.getMethod());
        }
        if (chunksBuilder_ == null) {
          if (!other.chunks_.isEmpty()) {
            if (chunks_.isEmpty()) {
              chunks_ = other.chunks_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureChunksIsMutable();
              chunks_.addAll(other.chunks_);
            }
            onChanged();
          }
        } else {
          if (!other.chunks_.isEmpty()) {
            if (chunksBuilder_.isEmpty()) {
              chunksBuilder_.dispose();
              chunksBuilder_ = null;
              chunks_ = other.chunks_;
              bitField0_ = (bitField0_ & ~0x00000002);
              chunksBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getChunksFieldBuilder() : null;
            } else {
              chunksBuilder_.addAllMessages(other.chunks_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressionMethod value = org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressionMethod.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                method_ = value;
              }
              break;
            }
            case 18: {
              org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.Builder subBuilder = org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addChunks(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .CompressedChunks.CompressionMethod method = 1 [default = GZIP];
      private org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressionMethod method_ = org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressionMethod.GZIP;
      public boolean hasMethod() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressionMethod getMethod() {
        return method_;
      }
      public Builder setMethod(org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressionMethod value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        method_ = value;
        onChanged();
        return this;
      }
      public Builder clearMethod() {
        bitField0_ = (bitField0_ & ~0x00000001);
        method_ = org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressionMethod.GZIP;
        onChanged();
        return this;
      }
      
      // repeated .CompressedChunks.CompressedChunk chunks = 2;
      private java.util.List<org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk> chunks_ =
        java.util.Collections.emptyList();
      private void ensureChunksIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          chunks_ = new java.util.ArrayList<org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk>(chunks_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk, org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.Builder, org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunkOrBuilder> chunksBuilder_;
      
      public java.util.List<org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk> getChunksList() {
        if (chunksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(chunks_);
        } else {
          return chunksBuilder_.getMessageList();
        }
      }
      public int getChunksCount() {
        if (chunksBuilder_ == null) {
          return chunks_.size();
        } else {
          return chunksBuilder_.getCount();
        }
      }
      public org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk getChunks(int index) {
        if (chunksBuilder_ == null) {
          return chunks_.get(index);
        } else {
          return chunksBuilder_.getMessage(index);
        }
      }
      public Builder setChunks(
          int index, org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk value) {
        if (chunksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChunksIsMutable();
          chunks_.set(index, value);
          onChanged();
        } else {
          chunksBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setChunks(
          int index, org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.Builder builderForValue) {
        if (chunksBuilder_ == null) {
          ensureChunksIsMutable();
          chunks_.set(index, builderForValue.build());
          onChanged();
        } else {
          chunksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addChunks(org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk value) {
        if (chunksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChunksIsMutable();
          chunks_.add(value);
          onChanged();
        } else {
          chunksBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addChunks(
          int index, org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk value) {
        if (chunksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChunksIsMutable();
          chunks_.add(index, value);
          onChanged();
        } else {
          chunksBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addChunks(
          org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.Builder builderForValue) {
        if (chunksBuilder_ == null) {
          ensureChunksIsMutable();
          chunks_.add(builderForValue.build());
          onChanged();
        } else {
          chunksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addChunks(
          int index, org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.Builder builderForValue) {
        if (chunksBuilder_ == null) {
          ensureChunksIsMutable();
          chunks_.add(index, builderForValue.build());
          onChanged();
        } else {
          chunksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllChunks(
          java.lang.Iterable<? extends org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk> values) {
        if (chunksBuilder_ == null) {
          ensureChunksIsMutable();
          super.addAll(values, chunks_);
          onChanged();
        } else {
          chunksBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearChunks() {
        if (chunksBuilder_ == null) {
          chunks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          chunksBuilder_.clear();
        }
        return this;
      }
      public Builder removeChunks(int index) {
        if (chunksBuilder_ == null) {
          ensureChunksIsMutable();
          chunks_.remove(index);
          onChanged();
        } else {
          chunksBuilder_.remove(index);
        }
        return this;
      }
      public org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.Builder getChunksBuilder(
          int index) {
        return getChunksFieldBuilder().getBuilder(index);
      }
      public org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunkOrBuilder getChunksOrBuilder(
          int index) {
        if (chunksBuilder_ == null) {
          return chunks_.get(index);  } else {
          return chunksBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunkOrBuilder> 
           getChunksOrBuilderList() {
        if (chunksBuilder_ != null) {
          return chunksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(chunks_);
        }
      }
      public org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.Builder addChunksBuilder() {
        return getChunksFieldBuilder().addBuilder(
            org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.getDefaultInstance());
      }
      public org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.Builder addChunksBuilder(
          int index) {
        return getChunksFieldBuilder().addBuilder(
            index, org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.getDefaultInstance());
      }
      public java.util.List<org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.Builder> 
           getChunksBuilderList() {
        return getChunksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk, org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.Builder, org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunkOrBuilder> 
          getChunksFieldBuilder() {
        if (chunksBuilder_ == null) {
          chunksBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk, org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.Builder, org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunkOrBuilder>(
                  chunks_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          chunks_ = null;
        }
        return chunksBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:CompressedChunks)
    }
    
    static {
      defaultInstance = new CompressedChunks(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CompressedChunks)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TeraArray_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TeraArray_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ModData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ModData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Chunk_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Chunk_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CompressedChunks_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CompressedChunks_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CompressedChunks_CompressedChunk_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CompressedChunks_CompressedChunk_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014Chunks.proto\"B\n\tTeraArray\022\023\n\004type\030\001 \001(" +
      "\0162\005.Type\022\022\n\nclass_name\030\002 \001(\t\022\014\n\004data\030\003 \001" +
      "(\014\"/\n\007ModData\022\n\n\002id\030\001 \001(\t\022\030\n\004data\030\002 \001(\0132" +
      "\n.TeraArray\"\335\001\n\005Chunk\022\t\n\001x\030\001 \001(\021\022\t\n\001y\030\002 " +
      "\001(\021\022\t\n\001z\030\003 \001(\021\022\r\n\005state\030\004 \001(\r\022\036\n\nblock_d" +
      "ata\030\005 \001(\0132\n.TeraArray\022!\n\rsunlight_data\030\006" +
      " \001(\0132\n.TeraArray\022\036\n\nlight_data\030\007 \001(\0132\n.T" +
      "eraArray\022\036\n\nextra_data\030\010 \001(\0132\n.TeraArray" +
      "\022\032\n\010mod_data\030\t \003(\0132\010.ModData*\005\010d\020\351\007\"\341\001\n\020" +
      "CompressedChunks\0229\n\006method\030\001 \001(\0162#.Compr",
      "essedChunks.CompressionMethod:\004GZIP\0221\n\006c" +
      "hunks\030\002 \003(\0132!.CompressedChunks.Compresse" +
      "dChunk\032@\n\017CompressedChunk\022\t\n\001x\030\001 \001(\021\022\t\n\001" +
      "y\030\002 \001(\021\022\t\n\001z\030\003 \001(\021\022\014\n\004data\030\004 \001(\014\"\035\n\021Comp" +
      "ressionMethod\022\010\n\004GZIP\020\000*\220\001\n\004Type\022\013\n\007Unkn" +
      "own\020\000\022\022\n\016DenseArray4Bit\020\001\022\022\n\016DenseArray8" +
      "Bit\020\002\022\023\n\017DenseArray16Bit\020\003\022\023\n\017SparseArra" +
      "y4Bit\020\004\022\023\n\017SparseArray8Bit\020\005\022\024\n\020SparseAr" +
      "ray16Bit\020\006*\242\001\n\005State\022 \n\034ADJACENCY_GENERA" +
      "TION_PENDING\020\000\022%\n!INTERNAL_LIGHT_GENERAT",
      "ION_PENDING\020\001\022\035\n\031LIGHT_PROPAGATION_PENDI" +
      "NG\020\002\022#\n\037FULL_LIGHT_CONNECTIVITY_PENDING\020" +
      "\003\022\014\n\010COMPLETE\020\004B+\n\027org.terasology.protob" +
      "ufB\016ChunksProtobufH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TeraArray_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TeraArray_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TeraArray_descriptor,
              new java.lang.String[] { "Type", "ClassName", "Data", },
              org.terasology.protobuf.ChunksProtobuf.TeraArray.class,
              org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder.class);
          internal_static_ModData_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_ModData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ModData_descriptor,
              new java.lang.String[] { "Id", "Data", },
              org.terasology.protobuf.ChunksProtobuf.ModData.class,
              org.terasology.protobuf.ChunksProtobuf.ModData.Builder.class);
          internal_static_Chunk_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_Chunk_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Chunk_descriptor,
              new java.lang.String[] { "X", "Y", "Z", "State", "BlockData", "SunlightData", "LightData", "ExtraData", "ModData", },
              org.terasology.protobuf.ChunksProtobuf.Chunk.class,
              org.terasology.protobuf.ChunksProtobuf.Chunk.Builder.class);
          internal_static_CompressedChunks_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_CompressedChunks_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CompressedChunks_descriptor,
              new java.lang.String[] { "Method", "Chunks", },
              org.terasology.protobuf.ChunksProtobuf.CompressedChunks.class,
              org.terasology.protobuf.ChunksProtobuf.CompressedChunks.Builder.class);
          internal_static_CompressedChunks_CompressedChunk_descriptor =
            internal_static_CompressedChunks_descriptor.getNestedTypes().get(0);
          internal_static_CompressedChunks_CompressedChunk_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CompressedChunks_CompressedChunk_descriptor,
              new java.lang.String[] { "X", "Y", "Z", "Data", },
              org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.class,
              org.terasology.protobuf.ChunksProtobuf.CompressedChunks.CompressedChunk.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
