// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Chunks.proto

package org.terasology.protobuf;

public final class ChunksProtobuf {
  private ChunksProtobuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum Type
      implements com.google.protobuf.ProtocolMessageEnum {
    DenseArray4Bit(0, 1),
    DenseArray8Bit(1, 2),
    DenseArray16Bit(2, 3),
    SparseArray4Bit(3, 4),
    SparseArray8Bit(4, 5),
    SparseArray16Bit(5, 6),
    ;
    
    public static final int DenseArray4Bit_VALUE = 1;
    public static final int DenseArray8Bit_VALUE = 2;
    public static final int DenseArray16Bit_VALUE = 3;
    public static final int SparseArray4Bit_VALUE = 4;
    public static final int SparseArray8Bit_VALUE = 5;
    public static final int SparseArray16Bit_VALUE = 6;
    
    
    public final int getNumber() { return value; }
    
    public static Type valueOf(int value) {
      switch (value) {
        case 1: return DenseArray4Bit;
        case 2: return DenseArray8Bit;
        case 3: return DenseArray16Bit;
        case 4: return SparseArray4Bit;
        case 5: return SparseArray8Bit;
        case 6: return SparseArray16Bit;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.terasology.protobuf.ChunksProtobuf.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final Type[] VALUES = {
      DenseArray4Bit, DenseArray8Bit, DenseArray16Bit, SparseArray4Bit, SparseArray8Bit, SparseArray16Bit, 
    };
    
    public static Type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private Type(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:Type)
  }
  
  public interface TeraArrayOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .Type type = 1;
    boolean hasType();
    org.terasology.protobuf.ChunksProtobuf.Type getType();
    
    // optional bytes data = 2;
    boolean hasData();
    com.google.protobuf.ByteString getData();
  }
  public static final class TeraArray extends
      com.google.protobuf.GeneratedMessage
      implements TeraArrayOrBuilder {
    // Use TeraArray.newBuilder() to construct.
    private TeraArray(Builder builder) {
      super(builder);
    }
    private TeraArray(boolean noInit) {}
    
    private static final TeraArray defaultInstance;
    public static TeraArray getDefaultInstance() {
      return defaultInstance;
    }
    
    public TeraArray getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_TeraArray_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_TeraArray_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .Type type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.terasology.protobuf.ChunksProtobuf.Type type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.terasology.protobuf.ChunksProtobuf.Type getType() {
      return type_;
    }
    
    // optional bytes data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    
    private void initFields() {
      type_ = org.terasology.protobuf.ChunksProtobuf.Type.DenseArray4Bit;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, data_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.terasology.protobuf.ChunksProtobuf.TeraArray prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_TeraArray_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_TeraArray_fieldAccessorTable;
      }
      
      // Construct using org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = org.terasology.protobuf.ChunksProtobuf.Type.DenseArray4Bit;
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.terasology.protobuf.ChunksProtobuf.TeraArray.getDescriptor();
      }
      
      public org.terasology.protobuf.ChunksProtobuf.TeraArray getDefaultInstanceForType() {
        return org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      }
      
      public org.terasology.protobuf.ChunksProtobuf.TeraArray build() {
        org.terasology.protobuf.ChunksProtobuf.TeraArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.terasology.protobuf.ChunksProtobuf.TeraArray buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.terasology.protobuf.ChunksProtobuf.TeraArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.terasology.protobuf.ChunksProtobuf.TeraArray buildPartial() {
        org.terasology.protobuf.ChunksProtobuf.TeraArray result = new org.terasology.protobuf.ChunksProtobuf.TeraArray(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.terasology.protobuf.ChunksProtobuf.TeraArray) {
          return mergeFrom((org.terasology.protobuf.ChunksProtobuf.TeraArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.terasology.protobuf.ChunksProtobuf.TeraArray other) {
        if (other == org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.terasology.protobuf.ChunksProtobuf.Type value = org.terasology.protobuf.ChunksProtobuf.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              data_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .Type type = 1;
      private org.terasology.protobuf.ChunksProtobuf.Type type_ = org.terasology.protobuf.ChunksProtobuf.Type.DenseArray4Bit;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.terasology.protobuf.ChunksProtobuf.Type getType() {
        return type_;
      }
      public Builder setType(org.terasology.protobuf.ChunksProtobuf.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.terasology.protobuf.ChunksProtobuf.Type.DenseArray4Bit;
        onChanged();
        return this;
      }
      
      // optional bytes data = 2;
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        data_ = value;
        onChanged();
        return this;
      }
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TeraArray)
    }
    
    static {
      defaultInstance = new TeraArray(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TeraArray)
  }
  
  public interface ChunkOrBuilder extends
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<Chunk> {
    
    // optional .TeraArray block = 1;
    boolean hasBlock();
    org.terasology.protobuf.ChunksProtobuf.TeraArray getBlock();
    org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getBlockOrBuilder();
    
    // optional .TeraArray sunlight = 2;
    boolean hasSunlight();
    org.terasology.protobuf.ChunksProtobuf.TeraArray getSunlight();
    org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getSunlightOrBuilder();
    
    // optional .TeraArray light = 3;
    boolean hasLight();
    org.terasology.protobuf.ChunksProtobuf.TeraArray getLight();
    org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getLightOrBuilder();
    
    // optional .TeraArray liquid = 4;
    boolean hasLiquid();
    org.terasology.protobuf.ChunksProtobuf.TeraArray getLiquid();
    org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getLiquidOrBuilder();
  }
  public static final class Chunk extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        Chunk> implements ChunkOrBuilder {
    // Use Chunk.newBuilder() to construct.
    private Chunk(Builder builder) {
      super(builder);
    }
    private Chunk(boolean noInit) {}
    
    private static final Chunk defaultInstance;
    public static Chunk getDefaultInstance() {
      return defaultInstance;
    }
    
    public Chunk getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_Chunk_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_Chunk_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .TeraArray block = 1;
    public static final int BLOCK_FIELD_NUMBER = 1;
    private org.terasology.protobuf.ChunksProtobuf.TeraArray block_;
    public boolean hasBlock() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArray getBlock() {
      return block_;
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getBlockOrBuilder() {
      return block_;
    }
    
    // optional .TeraArray sunlight = 2;
    public static final int SUNLIGHT_FIELD_NUMBER = 2;
    private org.terasology.protobuf.ChunksProtobuf.TeraArray sunlight_;
    public boolean hasSunlight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArray getSunlight() {
      return sunlight_;
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getSunlightOrBuilder() {
      return sunlight_;
    }
    
    // optional .TeraArray light = 3;
    public static final int LIGHT_FIELD_NUMBER = 3;
    private org.terasology.protobuf.ChunksProtobuf.TeraArray light_;
    public boolean hasLight() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArray getLight() {
      return light_;
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getLightOrBuilder() {
      return light_;
    }
    
    // optional .TeraArray liquid = 4;
    public static final int LIQUID_FIELD_NUMBER = 4;
    private org.terasology.protobuf.ChunksProtobuf.TeraArray liquid_;
    public boolean hasLiquid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArray getLiquid() {
      return liquid_;
    }
    public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getLiquidOrBuilder() {
      return liquid_;
    }
    
    private void initFields() {
      block_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      sunlight_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      light_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      liquid_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (hasBlock()) {
        if (!getBlock().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSunlight()) {
        if (!getSunlight().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLight()) {
        if (!getLight().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLiquid()) {
        if (!getLiquid().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<org.terasology.protobuf.ChunksProtobuf.Chunk>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, block_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, sunlight_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, light_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, liquid_);
      }
      extensionWriter.writeUntil(1001, output);
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, block_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sunlight_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, light_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, liquid_);
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.terasology.protobuf.ChunksProtobuf.Chunk prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          org.terasology.protobuf.ChunksProtobuf.Chunk, Builder> implements org.terasology.protobuf.ChunksProtobuf.ChunkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_Chunk_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_Chunk_fieldAccessorTable;
      }
      
      // Construct using org.terasology.protobuf.ChunksProtobuf.Chunk.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBlockFieldBuilder();
          getSunlightFieldBuilder();
          getLightFieldBuilder();
          getLiquidFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (blockBuilder_ == null) {
          block_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
        } else {
          blockBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sunlightBuilder_ == null) {
          sunlight_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
        } else {
          sunlightBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (lightBuilder_ == null) {
          light_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
        } else {
          lightBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (liquidBuilder_ == null) {
          liquid_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
        } else {
          liquidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.terasology.protobuf.ChunksProtobuf.Chunk.getDescriptor();
      }
      
      public org.terasology.protobuf.ChunksProtobuf.Chunk getDefaultInstanceForType() {
        return org.terasology.protobuf.ChunksProtobuf.Chunk.getDefaultInstance();
      }
      
      public org.terasology.protobuf.ChunksProtobuf.Chunk build() {
        org.terasology.protobuf.ChunksProtobuf.Chunk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.terasology.protobuf.ChunksProtobuf.Chunk buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.terasology.protobuf.ChunksProtobuf.Chunk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.terasology.protobuf.ChunksProtobuf.Chunk buildPartial() {
        org.terasology.protobuf.ChunksProtobuf.Chunk result = new org.terasology.protobuf.ChunksProtobuf.Chunk(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (blockBuilder_ == null) {
          result.block_ = block_;
        } else {
          result.block_ = blockBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (sunlightBuilder_ == null) {
          result.sunlight_ = sunlight_;
        } else {
          result.sunlight_ = sunlightBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (lightBuilder_ == null) {
          result.light_ = light_;
        } else {
          result.light_ = lightBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (liquidBuilder_ == null) {
          result.liquid_ = liquid_;
        } else {
          result.liquid_ = liquidBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.terasology.protobuf.ChunksProtobuf.Chunk) {
          return mergeFrom((org.terasology.protobuf.ChunksProtobuf.Chunk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.terasology.protobuf.ChunksProtobuf.Chunk other) {
        if (other == org.terasology.protobuf.ChunksProtobuf.Chunk.getDefaultInstance()) return this;
        if (other.hasBlock()) {
          mergeBlock(other.getBlock());
        }
        if (other.hasSunlight()) {
          mergeSunlight(other.getSunlight());
        }
        if (other.hasLight()) {
          mergeLight(other.getLight());
        }
        if (other.hasLiquid()) {
          mergeLiquid(other.getLiquid());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (hasBlock()) {
          if (!getBlock().isInitialized()) {
            
            return false;
          }
        }
        if (hasSunlight()) {
          if (!getSunlight().isInitialized()) {
            
            return false;
          }
        }
        if (hasLight()) {
          if (!getLight().isInitialized()) {
            
            return false;
          }
        }
        if (hasLiquid()) {
          if (!getLiquid().isInitialized()) {
            
            return false;
          }
        }
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder subBuilder = org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder();
              if (hasBlock()) {
                subBuilder.mergeFrom(getBlock());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBlock(subBuilder.buildPartial());
              break;
            }
            case 18: {
              org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder subBuilder = org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder();
              if (hasSunlight()) {
                subBuilder.mergeFrom(getSunlight());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSunlight(subBuilder.buildPartial());
              break;
            }
            case 26: {
              org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder subBuilder = org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder();
              if (hasLight()) {
                subBuilder.mergeFrom(getLight());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLight(subBuilder.buildPartial());
              break;
            }
            case 34: {
              org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder subBuilder = org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder();
              if (hasLiquid()) {
                subBuilder.mergeFrom(getLiquid());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLiquid(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .TeraArray block = 1;
      private org.terasology.protobuf.ChunksProtobuf.TeraArray block_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> blockBuilder_;
      public boolean hasBlock() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray getBlock() {
        if (blockBuilder_ == null) {
          return block_;
        } else {
          return blockBuilder_.getMessage();
        }
      }
      public Builder setBlock(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (blockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          block_ = value;
          onChanged();
        } else {
          blockBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setBlock(
          org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder builderForValue) {
        if (blockBuilder_ == null) {
          block_ = builderForValue.build();
          onChanged();
        } else {
          blockBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeBlock(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (blockBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              block_ != org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) {
            block_ =
              org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder(block_).mergeFrom(value).buildPartial();
          } else {
            block_ = value;
          }
          onChanged();
        } else {
          blockBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearBlock() {
        if (blockBuilder_ == null) {
          block_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
          onChanged();
        } else {
          blockBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder getBlockBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getBlockFieldBuilder().getBuilder();
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getBlockOrBuilder() {
        if (blockBuilder_ != null) {
          return blockBuilder_.getMessageOrBuilder();
        } else {
          return block_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> 
          getBlockFieldBuilder() {
        if (blockBuilder_ == null) {
          blockBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder>(
                  block_,
                  getParentForChildren(),
                  isClean());
          block_ = null;
        }
        return blockBuilder_;
      }
      
      // optional .TeraArray sunlight = 2;
      private org.terasology.protobuf.ChunksProtobuf.TeraArray sunlight_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> sunlightBuilder_;
      public boolean hasSunlight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray getSunlight() {
        if (sunlightBuilder_ == null) {
          return sunlight_;
        } else {
          return sunlightBuilder_.getMessage();
        }
      }
      public Builder setSunlight(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (sunlightBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sunlight_ = value;
          onChanged();
        } else {
          sunlightBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setSunlight(
          org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder builderForValue) {
        if (sunlightBuilder_ == null) {
          sunlight_ = builderForValue.build();
          onChanged();
        } else {
          sunlightBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeSunlight(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (sunlightBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              sunlight_ != org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) {
            sunlight_ =
              org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder(sunlight_).mergeFrom(value).buildPartial();
          } else {
            sunlight_ = value;
          }
          onChanged();
        } else {
          sunlightBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearSunlight() {
        if (sunlightBuilder_ == null) {
          sunlight_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
          onChanged();
        } else {
          sunlightBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder getSunlightBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSunlightFieldBuilder().getBuilder();
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getSunlightOrBuilder() {
        if (sunlightBuilder_ != null) {
          return sunlightBuilder_.getMessageOrBuilder();
        } else {
          return sunlight_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> 
          getSunlightFieldBuilder() {
        if (sunlightBuilder_ == null) {
          sunlightBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder>(
                  sunlight_,
                  getParentForChildren(),
                  isClean());
          sunlight_ = null;
        }
        return sunlightBuilder_;
      }
      
      // optional .TeraArray light = 3;
      private org.terasology.protobuf.ChunksProtobuf.TeraArray light_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> lightBuilder_;
      public boolean hasLight() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray getLight() {
        if (lightBuilder_ == null) {
          return light_;
        } else {
          return lightBuilder_.getMessage();
        }
      }
      public Builder setLight(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (lightBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          light_ = value;
          onChanged();
        } else {
          lightBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setLight(
          org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder builderForValue) {
        if (lightBuilder_ == null) {
          light_ = builderForValue.build();
          onChanged();
        } else {
          lightBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeLight(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (lightBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              light_ != org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) {
            light_ =
              org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder(light_).mergeFrom(value).buildPartial();
          } else {
            light_ = value;
          }
          onChanged();
        } else {
          lightBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearLight() {
        if (lightBuilder_ == null) {
          light_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
          onChanged();
        } else {
          lightBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder getLightBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getLightFieldBuilder().getBuilder();
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getLightOrBuilder() {
        if (lightBuilder_ != null) {
          return lightBuilder_.getMessageOrBuilder();
        } else {
          return light_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> 
          getLightFieldBuilder() {
        if (lightBuilder_ == null) {
          lightBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder>(
                  light_,
                  getParentForChildren(),
                  isClean());
          light_ = null;
        }
        return lightBuilder_;
      }
      
      // optional .TeraArray liquid = 4;
      private org.terasology.protobuf.ChunksProtobuf.TeraArray liquid_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> liquidBuilder_;
      public boolean hasLiquid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray getLiquid() {
        if (liquidBuilder_ == null) {
          return liquid_;
        } else {
          return liquidBuilder_.getMessage();
        }
      }
      public Builder setLiquid(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (liquidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          liquid_ = value;
          onChanged();
        } else {
          liquidBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setLiquid(
          org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder builderForValue) {
        if (liquidBuilder_ == null) {
          liquid_ = builderForValue.build();
          onChanged();
        } else {
          liquidBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeLiquid(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (liquidBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              liquid_ != org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) {
            liquid_ =
              org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder(liquid_).mergeFrom(value).buildPartial();
          } else {
            liquid_ = value;
          }
          onChanged();
        } else {
          liquidBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearLiquid() {
        if (liquidBuilder_ == null) {
          liquid_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
          onChanged();
        } else {
          liquidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder getLiquidBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getLiquidFieldBuilder().getBuilder();
      }
      public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getLiquidOrBuilder() {
        if (liquidBuilder_ != null) {
          return liquidBuilder_.getMessageOrBuilder();
        } else {
          return liquid_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> 
          getLiquidFieldBuilder() {
        if (liquidBuilder_ == null) {
          liquidBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder>(
                  liquid_,
                  getParentForChildren(),
                  isClean());
          liquid_ = null;
        }
        return liquidBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:Chunk)
    }
    
    static {
      defaultInstance = new Chunk(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Chunk)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TeraArray_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TeraArray_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Chunk_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Chunk_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014Chunks.proto\".\n\tTeraArray\022\023\n\004type\030\001 \002(" +
      "\0162\005.Type\022\014\n\004data\030\002 \001(\014\"~\n\005Chunk\022\031\n\005block" +
      "\030\001 \001(\0132\n.TeraArray\022\034\n\010sunlight\030\002 \001(\0132\n.T" +
      "eraArray\022\031\n\005light\030\003 \001(\0132\n.TeraArray\022\032\n\006l" +
      "iquid\030\004 \001(\0132\n.TeraArray*\005\010d\020\351\007*\203\001\n\004Type\022" +
      "\022\n\016DenseArray4Bit\020\001\022\022\n\016DenseArray8Bit\020\002\022" +
      "\023\n\017DenseArray16Bit\020\003\022\023\n\017SparseArray4Bit\020" +
      "\004\022\023\n\017SparseArray8Bit\020\005\022\024\n\020SparseArray16B" +
      "it\020\006B+\n\027org.terasology.protobufB\016ChunksP" +
      "rotobufH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TeraArray_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TeraArray_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TeraArray_descriptor,
              new java.lang.String[] { "Type", "Data", },
              org.terasology.protobuf.ChunksProtobuf.TeraArray.class,
              org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder.class);
          internal_static_Chunk_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_Chunk_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Chunk_descriptor,
              new java.lang.String[] { "Block", "Sunlight", "Light", "Liquid", },
              org.terasology.protobuf.ChunksProtobuf.Chunk.class,
              org.terasology.protobuf.ChunksProtobuf.Chunk.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
