/*
 * Copyright 2013 Moving Blocks
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Chunks.proto

package org.terasology.protobuf;

public final class ChunksProtobuf {
  private ChunksProtobuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code Type}
   */
  public enum Type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Unknown = 0;</code>
     */
    Unknown(0, 0),
    /**
     * <code>DenseArray4Bit = 1;</code>
     */
    DenseArray4Bit(1, 1),
    /**
     * <code>DenseArray8Bit = 2;</code>
     */
    DenseArray8Bit(2, 2),
    /**
     * <code>DenseArray16Bit = 3;</code>
     */
    DenseArray16Bit(3, 3),
    /**
     * <code>SparseArray4Bit = 4;</code>
     */
    SparseArray4Bit(4, 4),
    /**
     * <code>SparseArray8Bit = 5;</code>
     */
    SparseArray8Bit(5, 5),
    /**
     * <code>SparseArray16Bit = 6;</code>
     */
    SparseArray16Bit(6, 6),
    ;

    /**
     * <code>Unknown = 0;</code>
     */
    public static final int Unknown_VALUE = 0;
    /**
     * <code>DenseArray4Bit = 1;</code>
     */
    public static final int DenseArray4Bit_VALUE = 1;
    /**
     * <code>DenseArray8Bit = 2;</code>
     */
    public static final int DenseArray8Bit_VALUE = 2;
    /**
     * <code>DenseArray16Bit = 3;</code>
     */
    public static final int DenseArray16Bit_VALUE = 3;
    /**
     * <code>SparseArray4Bit = 4;</code>
     */
    public static final int SparseArray4Bit_VALUE = 4;
    /**
     * <code>SparseArray8Bit = 5;</code>
     */
    public static final int SparseArray8Bit_VALUE = 5;
    /**
     * <code>SparseArray16Bit = 6;</code>
     */
    public static final int SparseArray16Bit_VALUE = 6;


    public final int getNumber() { return value; }

    public static Type valueOf(int value) {
      switch (value) {
        case 0: return Unknown;
        case 1: return DenseArray4Bit;
        case 2: return DenseArray8Bit;
        case 3: return DenseArray16Bit;
        case 4: return SparseArray4Bit;
        case 5: return SparseArray8Bit;
        case 6: return SparseArray16Bit;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.terasology.protobuf.ChunksProtobuf.getDescriptor().getEnumTypes().get(0);
    }

    private static final Type[] VALUES = values();

    public static Type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Type(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Type)
  }

  /**
   * Protobuf enum {@code State}
   */
  public enum State
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ADJACENCY_GENERATION_PENDING = 0;</code>
     */
    ADJACENCY_GENERATION_PENDING(0, 0),
    /**
     * <code>INTERNAL_LIGHT_GENERATION_PENDING = 1;</code>
     */
    INTERNAL_LIGHT_GENERATION_PENDING(1, 1),
    /**
     * <code>LIGHT_PROPAGATION_PENDING = 2;</code>
     */
    LIGHT_PROPAGATION_PENDING(2, 2),
    /**
     * <code>FULL_LIGHT_CONNECTIVITY_PENDING = 3;</code>
     */
    FULL_LIGHT_CONNECTIVITY_PENDING(3, 3),
    /**
     * <code>COMPLETE = 4;</code>
     */
    COMPLETE(4, 4),
    ;

    /**
     * <code>ADJACENCY_GENERATION_PENDING = 0;</code>
     */
    public static final int ADJACENCY_GENERATION_PENDING_VALUE = 0;
    /**
     * <code>INTERNAL_LIGHT_GENERATION_PENDING = 1;</code>
     */
    public static final int INTERNAL_LIGHT_GENERATION_PENDING_VALUE = 1;
    /**
     * <code>LIGHT_PROPAGATION_PENDING = 2;</code>
     */
    public static final int LIGHT_PROPAGATION_PENDING_VALUE = 2;
    /**
     * <code>FULL_LIGHT_CONNECTIVITY_PENDING = 3;</code>
     */
    public static final int FULL_LIGHT_CONNECTIVITY_PENDING_VALUE = 3;
    /**
     * <code>COMPLETE = 4;</code>
     */
    public static final int COMPLETE_VALUE = 4;


    public final int getNumber() { return value; }

    public static State valueOf(int value) {
      switch (value) {
        case 0: return ADJACENCY_GENERATION_PENDING;
        case 1: return INTERNAL_LIGHT_GENERATION_PENDING;
        case 2: return LIGHT_PROPAGATION_PENDING;
        case 3: return FULL_LIGHT_CONNECTIVITY_PENDING;
        case 4: return COMPLETE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<State>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<State>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<State>() {
            public State findValueByNumber(int number) {
              return State.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.terasology.protobuf.ChunksProtobuf.getDescriptor().getEnumTypes().get(1);
    }

    private static final State[] VALUES = values();

    public static State valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private State(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:State)
  }

  public interface TeraArrayOrBuilder extends
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<TeraArray> {

    // optional .Type type = 1;
    /**
     * <code>optional .Type type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .Type type = 1;</code>
     */
    org.terasology.protobuf.ChunksProtobuf.Type getType();

    // optional string class_name = 2;
    /**
     * <code>optional string class_name = 2;</code>
     */
    boolean hasClassName();
    /**
     * <code>optional string class_name = 2;</code>
     */
    java.lang.String getClassName();
    /**
     * <code>optional string class_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getClassNameBytes();

    // optional bytes data = 3;
    /**
     * <code>optional bytes data = 3;</code>
     */
    boolean hasData();
    /**
     * <code>optional bytes data = 3;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code TeraArray}
   */
  public static final class TeraArray extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        TeraArray> implements TeraArrayOrBuilder {
    // Use TeraArray.newBuilder() to construct.
    private TeraArray(com.google.protobuf.GeneratedMessage.ExtendableBuilder<org.terasology.protobuf.ChunksProtobuf.TeraArray, ?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TeraArray(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TeraArray defaultInstance;
    public static TeraArray getDefaultInstance() {
      return defaultInstance;
    }

    public TeraArray getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TeraArray(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.terasology.protobuf.ChunksProtobuf.Type value = org.terasology.protobuf.ChunksProtobuf.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              className_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_TeraArray_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_TeraArray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.terasology.protobuf.ChunksProtobuf.TeraArray.class, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder.class);
    }

    public static com.google.protobuf.Parser<TeraArray> PARSER =
        new com.google.protobuf.AbstractParser<TeraArray>() {
      public TeraArray parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeraArray(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TeraArray> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .Type type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.terasology.protobuf.ChunksProtobuf.Type type_;
    /**
     * <code>optional .Type type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .Type type = 1;</code>
     */
    public org.terasology.protobuf.ChunksProtobuf.Type getType() {
      return type_;
    }

    // optional string class_name = 2;
    public static final int CLASS_NAME_FIELD_NUMBER = 2;
    private java.lang.Object className_;
    /**
     * <code>optional string class_name = 2;</code>
     */
    public boolean hasClassName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string class_name = 2;</code>
     */
    public java.lang.String getClassName() {
      java.lang.Object ref = className_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          className_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string class_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getClassNameBytes() {
      java.lang.Object ref = className_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        className_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bytes data = 3;
    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 3;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes data = 3;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private void initFields() {
      type_ = org.terasology.protobuf.ChunksProtobuf.Type.Unknown;
      className_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<org.terasology.protobuf.ChunksProtobuf.TeraArray>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getClassNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, data_);
      }
      extensionWriter.writeUntil(536870912, output);
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getClassNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, data_);
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.terasology.protobuf.ChunksProtobuf.TeraArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.terasology.protobuf.ChunksProtobuf.TeraArray prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TeraArray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, Builder> implements org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_TeraArray_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_TeraArray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.terasology.protobuf.ChunksProtobuf.TeraArray.class, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder.class);
      }

      // Construct using org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = org.terasology.protobuf.ChunksProtobuf.Type.Unknown;
        bitField0_ = (bitField0_ & ~0x00000001);
        className_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_TeraArray_descriptor;
      }

      public org.terasology.protobuf.ChunksProtobuf.TeraArray getDefaultInstanceForType() {
        return org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      }

      public org.terasology.protobuf.ChunksProtobuf.TeraArray build() {
        org.terasology.protobuf.ChunksProtobuf.TeraArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.terasology.protobuf.ChunksProtobuf.TeraArray buildPartial() {
        org.terasology.protobuf.ChunksProtobuf.TeraArray result = new org.terasology.protobuf.ChunksProtobuf.TeraArray(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.className_ = className_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.terasology.protobuf.ChunksProtobuf.TeraArray) {
          return mergeFrom((org.terasology.protobuf.ChunksProtobuf.TeraArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.terasology.protobuf.ChunksProtobuf.TeraArray other) {
        if (other == org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasClassName()) {
          bitField0_ |= 0x00000002;
          className_ = other.className_;
          onChanged();
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.terasology.protobuf.ChunksProtobuf.TeraArray parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.terasology.protobuf.ChunksProtobuf.TeraArray) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .Type type = 1;
      private org.terasology.protobuf.ChunksProtobuf.Type type_ = org.terasology.protobuf.ChunksProtobuf.Type.Unknown;
      /**
       * <code>optional .Type type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .Type type = 1;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.Type getType() {
        return type_;
      }
      /**
       * <code>optional .Type type = 1;</code>
       */
      public Builder setType(org.terasology.protobuf.ChunksProtobuf.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .Type type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.terasology.protobuf.ChunksProtobuf.Type.Unknown;
        onChanged();
        return this;
      }

      // optional string class_name = 2;
      private java.lang.Object className_ = "";
      /**
       * <code>optional string class_name = 2;</code>
       */
      public boolean hasClassName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string class_name = 2;</code>
       */
      public java.lang.String getClassName() {
        java.lang.Object ref = className_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          className_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string class_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getClassNameBytes() {
        java.lang.Object ref = className_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          className_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string class_name = 2;</code>
       */
      public Builder setClassName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        className_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string class_name = 2;</code>
       */
      public Builder clearClassName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        className_ = getDefaultInstance().getClassName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string class_name = 2;</code>
       */
      public Builder setClassNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        className_ = value;
        onChanged();
        return this;
      }

      // optional bytes data = 3;
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes data = 3;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes data = 3;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 3;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 3;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TeraArray)
    }

    static {
      defaultInstance = new TeraArray(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TeraArray)
  }

  public interface ModDataOrBuilder extends
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<ModData> {

    // optional string id = 1;
    /**
     * <code>optional string id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    // optional .TeraArray data = 2;
    /**
     * <code>optional .TeraArray data = 2;</code>
     */
    boolean hasData();
    /**
     * <code>optional .TeraArray data = 2;</code>
     */
    org.terasology.protobuf.ChunksProtobuf.TeraArray getData();
    /**
     * <code>optional .TeraArray data = 2;</code>
     */
    org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getDataOrBuilder();
  }
  /**
   * Protobuf type {@code ModData}
   */
  public static final class ModData extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        ModData> implements ModDataOrBuilder {
    // Use ModData.newBuilder() to construct.
    private ModData(com.google.protobuf.GeneratedMessage.ExtendableBuilder<org.terasology.protobuf.ChunksProtobuf.ModData, ?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ModData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ModData defaultInstance;
    public static ModData getDefaultInstance() {
      return defaultInstance;
    }

    public ModData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ModData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 18: {
              org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(org.terasology.protobuf.ChunksProtobuf.TeraArray.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_ModData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_ModData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.terasology.protobuf.ChunksProtobuf.ModData.class, org.terasology.protobuf.ChunksProtobuf.ModData.Builder.class);
    }

    public static com.google.protobuf.Parser<ModData> PARSER =
        new com.google.protobuf.AbstractParser<ModData>() {
      public ModData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ModData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ModData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    /**
     * <code>optional string id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .TeraArray data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private org.terasology.protobuf.ChunksProtobuf.TeraArray data_;
    /**
     * <code>optional .TeraArray data = 2;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .TeraArray data = 2;</code>
     */
    public org.terasology.protobuf.ChunksProtobuf.TeraArray getData() {
      return data_;
    }
    /**
     * <code>optional .TeraArray data = 2;</code>
     */
    public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getDataOrBuilder() {
      return data_;
    }

    private void initFields() {
      id_ = "";
      data_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasData()) {
        if (!getData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<org.terasology.protobuf.ChunksProtobuf.ModData>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, data_);
      }
      extensionWriter.writeUntil(536870912, output);
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, data_);
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.terasology.protobuf.ChunksProtobuf.ModData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.terasology.protobuf.ChunksProtobuf.ModData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.terasology.protobuf.ChunksProtobuf.ModData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ModData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          org.terasology.protobuf.ChunksProtobuf.ModData, Builder> implements org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_ModData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_ModData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.terasology.protobuf.ChunksProtobuf.ModData.class, org.terasology.protobuf.ChunksProtobuf.ModData.Builder.class);
      }

      // Construct using org.terasology.protobuf.ChunksProtobuf.ModData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dataBuilder_ == null) {
          data_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
        } else {
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_ModData_descriptor;
      }

      public org.terasology.protobuf.ChunksProtobuf.ModData getDefaultInstanceForType() {
        return org.terasology.protobuf.ChunksProtobuf.ModData.getDefaultInstance();
      }

      public org.terasology.protobuf.ChunksProtobuf.ModData build() {
        org.terasology.protobuf.ChunksProtobuf.ModData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.terasology.protobuf.ChunksProtobuf.ModData buildPartial() {
        org.terasology.protobuf.ChunksProtobuf.ModData result = new org.terasology.protobuf.ChunksProtobuf.ModData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.terasology.protobuf.ChunksProtobuf.ModData) {
          return mergeFrom((org.terasology.protobuf.ChunksProtobuf.ModData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.terasology.protobuf.ChunksProtobuf.ModData other) {
        if (other == org.terasology.protobuf.ChunksProtobuf.ModData.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasData()) {
          if (!getData().isInitialized()) {
            
            return false;
          }
        }
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.terasology.protobuf.ChunksProtobuf.ModData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.terasology.protobuf.ChunksProtobuf.ModData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string id = 1;
      private java.lang.Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      // optional .TeraArray data = 2;
      private org.terasology.protobuf.ChunksProtobuf.TeraArray data_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> dataBuilder_;
      /**
       * <code>optional .TeraArray data = 2;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .TeraArray data = 2;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.TeraArray getData() {
        if (dataBuilder_ == null) {
          return data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TeraArray data = 2;</code>
       */
      public Builder setData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TeraArray data = 2;</code>
       */
      public Builder setData(
          org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TeraArray data = 2;</code>
       */
      public Builder mergeData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              data_ != org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) {
            data_ =
              org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TeraArray data = 2;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .TeraArray data = 2;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder getDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TeraArray data = 2;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_;
        }
      }
      /**
       * <code>optional .TeraArray data = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder>(
                  data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ModData)
    }

    static {
      defaultInstance = new ModData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ModData)
  }

  public interface ChunkOrBuilder extends
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<Chunk> {

    // optional sint32 x = 1;
    /**
     * <code>optional sint32 x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>optional sint32 x = 1;</code>
     */
    int getX();

    // optional sint32 y = 2;
    /**
     * <code>optional sint32 y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>optional sint32 y = 2;</code>
     */
    int getY();

    // optional sint32 z = 3;
    /**
     * <code>optional sint32 z = 3;</code>
     */
    boolean hasZ();
    /**
     * <code>optional sint32 z = 3;</code>
     */
    int getZ();

    // optional .State state = 4;
    /**
     * <code>optional .State state = 4;</code>
     */
    boolean hasState();
    /**
     * <code>optional .State state = 4;</code>
     */
    org.terasology.protobuf.ChunksProtobuf.State getState();

    // optional .TeraArray block_data = 5;
    /**
     * <code>optional .TeraArray block_data = 5;</code>
     */
    boolean hasBlockData();
    /**
     * <code>optional .TeraArray block_data = 5;</code>
     */
    org.terasology.protobuf.ChunksProtobuf.TeraArray getBlockData();
    /**
     * <code>optional .TeraArray block_data = 5;</code>
     */
    org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getBlockDataOrBuilder();

    // optional .TeraArray sunlight_data = 6;
    /**
     * <code>optional .TeraArray sunlight_data = 6;</code>
     */
    boolean hasSunlightData();
    /**
     * <code>optional .TeraArray sunlight_data = 6;</code>
     */
    org.terasology.protobuf.ChunksProtobuf.TeraArray getSunlightData();
    /**
     * <code>optional .TeraArray sunlight_data = 6;</code>
     */
    org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getSunlightDataOrBuilder();

    // optional .TeraArray light_data = 7;
    /**
     * <code>optional .TeraArray light_data = 7;</code>
     */
    boolean hasLightData();
    /**
     * <code>optional .TeraArray light_data = 7;</code>
     */
    org.terasology.protobuf.ChunksProtobuf.TeraArray getLightData();
    /**
     * <code>optional .TeraArray light_data = 7;</code>
     */
    org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getLightDataOrBuilder();

    // optional .TeraArray extra_data = 8;
    /**
     * <code>optional .TeraArray extra_data = 8;</code>
     */
    boolean hasExtraData();
    /**
     * <code>optional .TeraArray extra_data = 8;</code>
     */
    org.terasology.protobuf.ChunksProtobuf.TeraArray getExtraData();
    /**
     * <code>optional .TeraArray extra_data = 8;</code>
     */
    org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getExtraDataOrBuilder();

    // repeated .ModData mod_data = 9;
    /**
     * <code>repeated .ModData mod_data = 9;</code>
     */
    java.util.List<org.terasology.protobuf.ChunksProtobuf.ModData> 
        getModDataList();
    /**
     * <code>repeated .ModData mod_data = 9;</code>
     */
    org.terasology.protobuf.ChunksProtobuf.ModData getModData(int index);
    /**
     * <code>repeated .ModData mod_data = 9;</code>
     */
    int getModDataCount();
    /**
     * <code>repeated .ModData mod_data = 9;</code>
     */
    java.util.List<? extends org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder> 
        getModDataOrBuilderList();
    /**
     * <code>repeated .ModData mod_data = 9;</code>
     */
    org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder getModDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Chunk}
   */
  public static final class Chunk extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        Chunk> implements ChunkOrBuilder {
    // Use Chunk.newBuilder() to construct.
    private Chunk(com.google.protobuf.GeneratedMessage.ExtendableBuilder<org.terasology.protobuf.ChunksProtobuf.Chunk, ?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Chunk(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Chunk defaultInstance;
    public static Chunk getDefaultInstance() {
      return defaultInstance;
    }

    public Chunk getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Chunk(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              y_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              z_ = input.readSInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              org.terasology.protobuf.ChunksProtobuf.State value = org.terasology.protobuf.ChunksProtobuf.State.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                state_ = value;
              }
              break;
            }
            case 42: {
              org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = blockData_.toBuilder();
              }
              blockData_ = input.readMessage(org.terasology.protobuf.ChunksProtobuf.TeraArray.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(blockData_);
                blockData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = sunlightData_.toBuilder();
              }
              sunlightData_ = input.readMessage(org.terasology.protobuf.ChunksProtobuf.TeraArray.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sunlightData_);
                sunlightData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = lightData_.toBuilder();
              }
              lightData_ = input.readMessage(org.terasology.protobuf.ChunksProtobuf.TeraArray.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lightData_);
                lightData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = extraData_.toBuilder();
              }
              extraData_ = input.readMessage(org.terasology.protobuf.ChunksProtobuf.TeraArray.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(extraData_);
                extraData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                modData_ = new java.util.ArrayList<org.terasology.protobuf.ChunksProtobuf.ModData>();
                mutable_bitField0_ |= 0x00000100;
              }
              modData_.add(input.readMessage(org.terasology.protobuf.ChunksProtobuf.ModData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          modData_ = java.util.Collections.unmodifiableList(modData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_Chunk_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.terasology.protobuf.ChunksProtobuf.internal_static_Chunk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.terasology.protobuf.ChunksProtobuf.Chunk.class, org.terasology.protobuf.ChunksProtobuf.Chunk.Builder.class);
    }

    public static com.google.protobuf.Parser<Chunk> PARSER =
        new com.google.protobuf.AbstractParser<Chunk>() {
      public Chunk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Chunk(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Chunk> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional sint32 x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    /**
     * <code>optional sint32 x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint32 x = 1;</code>
     */
    public int getX() {
      return x_;
    }

    // optional sint32 y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    /**
     * <code>optional sint32 y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 y = 2;</code>
     */
    public int getY() {
      return y_;
    }

    // optional sint32 z = 3;
    public static final int Z_FIELD_NUMBER = 3;
    private int z_;
    /**
     * <code>optional sint32 z = 3;</code>
     */
    public boolean hasZ() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 z = 3;</code>
     */
    public int getZ() {
      return z_;
    }

    // optional .State state = 4;
    public static final int STATE_FIELD_NUMBER = 4;
    private org.terasology.protobuf.ChunksProtobuf.State state_;
    /**
     * <code>optional .State state = 4;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .State state = 4;</code>
     */
    public org.terasology.protobuf.ChunksProtobuf.State getState() {
      return state_;
    }

    // optional .TeraArray block_data = 5;
    public static final int BLOCK_DATA_FIELD_NUMBER = 5;
    private org.terasology.protobuf.ChunksProtobuf.TeraArray blockData_;
    /**
     * <code>optional .TeraArray block_data = 5;</code>
     */
    public boolean hasBlockData() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .TeraArray block_data = 5;</code>
     */
    public org.terasology.protobuf.ChunksProtobuf.TeraArray getBlockData() {
      return blockData_;
    }
    /**
     * <code>optional .TeraArray block_data = 5;</code>
     */
    public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getBlockDataOrBuilder() {
      return blockData_;
    }

    // optional .TeraArray sunlight_data = 6;
    public static final int SUNLIGHT_DATA_FIELD_NUMBER = 6;
    private org.terasology.protobuf.ChunksProtobuf.TeraArray sunlightData_;
    /**
     * <code>optional .TeraArray sunlight_data = 6;</code>
     */
    public boolean hasSunlightData() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .TeraArray sunlight_data = 6;</code>
     */
    public org.terasology.protobuf.ChunksProtobuf.TeraArray getSunlightData() {
      return sunlightData_;
    }
    /**
     * <code>optional .TeraArray sunlight_data = 6;</code>
     */
    public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getSunlightDataOrBuilder() {
      return sunlightData_;
    }

    // optional .TeraArray light_data = 7;
    public static final int LIGHT_DATA_FIELD_NUMBER = 7;
    private org.terasology.protobuf.ChunksProtobuf.TeraArray lightData_;
    /**
     * <code>optional .TeraArray light_data = 7;</code>
     */
    public boolean hasLightData() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .TeraArray light_data = 7;</code>
     */
    public org.terasology.protobuf.ChunksProtobuf.TeraArray getLightData() {
      return lightData_;
    }
    /**
     * <code>optional .TeraArray light_data = 7;</code>
     */
    public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getLightDataOrBuilder() {
      return lightData_;
    }

    // optional .TeraArray extra_data = 8;
    public static final int EXTRA_DATA_FIELD_NUMBER = 8;
    private org.terasology.protobuf.ChunksProtobuf.TeraArray extraData_;
    /**
     * <code>optional .TeraArray extra_data = 8;</code>
     */
    public boolean hasExtraData() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .TeraArray extra_data = 8;</code>
     */
    public org.terasology.protobuf.ChunksProtobuf.TeraArray getExtraData() {
      return extraData_;
    }
    /**
     * <code>optional .TeraArray extra_data = 8;</code>
     */
    public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getExtraDataOrBuilder() {
      return extraData_;
    }

    // repeated .ModData mod_data = 9;
    public static final int MOD_DATA_FIELD_NUMBER = 9;
    private java.util.List<org.terasology.protobuf.ChunksProtobuf.ModData> modData_;
    /**
     * <code>repeated .ModData mod_data = 9;</code>
     */
    public java.util.List<org.terasology.protobuf.ChunksProtobuf.ModData> getModDataList() {
      return modData_;
    }
    /**
     * <code>repeated .ModData mod_data = 9;</code>
     */
    public java.util.List<? extends org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder> 
        getModDataOrBuilderList() {
      return modData_;
    }
    /**
     * <code>repeated .ModData mod_data = 9;</code>
     */
    public int getModDataCount() {
      return modData_.size();
    }
    /**
     * <code>repeated .ModData mod_data = 9;</code>
     */
    public org.terasology.protobuf.ChunksProtobuf.ModData getModData(int index) {
      return modData_.get(index);
    }
    /**
     * <code>repeated .ModData mod_data = 9;</code>
     */
    public org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder getModDataOrBuilder(
        int index) {
      return modData_.get(index);
    }

    private void initFields() {
      x_ = 0;
      y_ = 0;
      z_ = 0;
      state_ = org.terasology.protobuf.ChunksProtobuf.State.ADJACENCY_GENERATION_PENDING;
      blockData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      sunlightData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      lightData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      extraData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      modData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasBlockData()) {
        if (!getBlockData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSunlightData()) {
        if (!getSunlightData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLightData()) {
        if (!getLightData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasExtraData()) {
        if (!getExtraData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getModDataCount(); i++) {
        if (!getModData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<org.terasology.protobuf.ChunksProtobuf.Chunk>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, z_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, state_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, blockData_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, sunlightData_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, lightData_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, extraData_);
      }
      for (int i = 0; i < modData_.size(); i++) {
        output.writeMessage(9, modData_.get(i));
      }
      extensionWriter.writeUntil(536870912, output);
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, z_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, state_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, blockData_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, sunlightData_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, lightData_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, extraData_);
      }
      for (int i = 0; i < modData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, modData_.get(i));
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.terasology.protobuf.ChunksProtobuf.Chunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.terasology.protobuf.ChunksProtobuf.Chunk prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Chunk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          org.terasology.protobuf.ChunksProtobuf.Chunk, Builder> implements org.terasology.protobuf.ChunksProtobuf.ChunkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_Chunk_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_Chunk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.terasology.protobuf.ChunksProtobuf.Chunk.class, org.terasology.protobuf.ChunksProtobuf.Chunk.Builder.class);
      }

      // Construct using org.terasology.protobuf.ChunksProtobuf.Chunk.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBlockDataFieldBuilder();
          getSunlightDataFieldBuilder();
          getLightDataFieldBuilder();
          getExtraDataFieldBuilder();
          getModDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        z_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        state_ = org.terasology.protobuf.ChunksProtobuf.State.ADJACENCY_GENERATION_PENDING;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (blockDataBuilder_ == null) {
          blockData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
        } else {
          blockDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (sunlightDataBuilder_ == null) {
          sunlightData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
        } else {
          sunlightDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (lightDataBuilder_ == null) {
          lightData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
        } else {
          lightDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (extraDataBuilder_ == null) {
          extraData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
        } else {
          extraDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (modDataBuilder_ == null) {
          modData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          modDataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.terasology.protobuf.ChunksProtobuf.internal_static_Chunk_descriptor;
      }

      public org.terasology.protobuf.ChunksProtobuf.Chunk getDefaultInstanceForType() {
        return org.terasology.protobuf.ChunksProtobuf.Chunk.getDefaultInstance();
      }

      public org.terasology.protobuf.ChunksProtobuf.Chunk build() {
        org.terasology.protobuf.ChunksProtobuf.Chunk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.terasology.protobuf.ChunksProtobuf.Chunk buildPartial() {
        org.terasology.protobuf.ChunksProtobuf.Chunk result = new org.terasology.protobuf.ChunksProtobuf.Chunk(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.z_ = z_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (blockDataBuilder_ == null) {
          result.blockData_ = blockData_;
        } else {
          result.blockData_ = blockDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (sunlightDataBuilder_ == null) {
          result.sunlightData_ = sunlightData_;
        } else {
          result.sunlightData_ = sunlightDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (lightDataBuilder_ == null) {
          result.lightData_ = lightData_;
        } else {
          result.lightData_ = lightDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (extraDataBuilder_ == null) {
          result.extraData_ = extraData_;
        } else {
          result.extraData_ = extraDataBuilder_.build();
        }
        if (modDataBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            modData_ = java.util.Collections.unmodifiableList(modData_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.modData_ = modData_;
        } else {
          result.modData_ = modDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.terasology.protobuf.ChunksProtobuf.Chunk) {
          return mergeFrom((org.terasology.protobuf.ChunksProtobuf.Chunk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.terasology.protobuf.ChunksProtobuf.Chunk other) {
        if (other == org.terasology.protobuf.ChunksProtobuf.Chunk.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasBlockData()) {
          mergeBlockData(other.getBlockData());
        }
        if (other.hasSunlightData()) {
          mergeSunlightData(other.getSunlightData());
        }
        if (other.hasLightData()) {
          mergeLightData(other.getLightData());
        }
        if (other.hasExtraData()) {
          mergeExtraData(other.getExtraData());
        }
        if (modDataBuilder_ == null) {
          if (!other.modData_.isEmpty()) {
            if (modData_.isEmpty()) {
              modData_ = other.modData_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureModDataIsMutable();
              modData_.addAll(other.modData_);
            }
            onChanged();
          }
        } else {
          if (!other.modData_.isEmpty()) {
            if (modDataBuilder_.isEmpty()) {
              modDataBuilder_.dispose();
              modDataBuilder_ = null;
              modData_ = other.modData_;
              bitField0_ = (bitField0_ & ~0x00000100);
              modDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getModDataFieldBuilder() : null;
            } else {
              modDataBuilder_.addAllMessages(other.modData_);
            }
          }
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasBlockData()) {
          if (!getBlockData().isInitialized()) {
            
            return false;
          }
        }
        if (hasSunlightData()) {
          if (!getSunlightData().isInitialized()) {
            
            return false;
          }
        }
        if (hasLightData()) {
          if (!getLightData().isInitialized()) {
            
            return false;
          }
        }
        if (hasExtraData()) {
          if (!getExtraData().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getModDataCount(); i++) {
          if (!getModData(i).isInitialized()) {
            
            return false;
          }
        }
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.terasology.protobuf.ChunksProtobuf.Chunk parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.terasology.protobuf.ChunksProtobuf.Chunk) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional sint32 x = 1;
      private int x_ ;
      /**
       * <code>optional sint32 x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint32 x = 1;</code>
       */
      public int getX() {
        return x_;
      }
      /**
       * <code>optional sint32 x = 1;</code>
       */
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 y = 2;
      private int y_ ;
      /**
       * <code>optional sint32 y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 y = 2;</code>
       */
      public int getY() {
        return y_;
      }
      /**
       * <code>optional sint32 y = 2;</code>
       */
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 z = 3;
      private int z_ ;
      /**
       * <code>optional sint32 z = 3;</code>
       */
      public boolean hasZ() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint32 z = 3;</code>
       */
      public int getZ() {
        return z_;
      }
      /**
       * <code>optional sint32 z = 3;</code>
       */
      public Builder setZ(int value) {
        bitField0_ |= 0x00000004;
        z_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 z = 3;</code>
       */
      public Builder clearZ() {
        bitField0_ = (bitField0_ & ~0x00000004);
        z_ = 0;
        onChanged();
        return this;
      }

      // optional .State state = 4;
      private org.terasology.protobuf.ChunksProtobuf.State state_ = org.terasology.protobuf.ChunksProtobuf.State.ADJACENCY_GENERATION_PENDING;
      /**
       * <code>optional .State state = 4;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .State state = 4;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.State getState() {
        return state_;
      }
      /**
       * <code>optional .State state = 4;</code>
       */
      public Builder setState(org.terasology.protobuf.ChunksProtobuf.State value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .State state = 4;</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000008);
        state_ = org.terasology.protobuf.ChunksProtobuf.State.ADJACENCY_GENERATION_PENDING;
        onChanged();
        return this;
      }

      // optional .TeraArray block_data = 5;
      private org.terasology.protobuf.ChunksProtobuf.TeraArray blockData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> blockDataBuilder_;
      /**
       * <code>optional .TeraArray block_data = 5;</code>
       */
      public boolean hasBlockData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .TeraArray block_data = 5;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.TeraArray getBlockData() {
        if (blockDataBuilder_ == null) {
          return blockData_;
        } else {
          return blockDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TeraArray block_data = 5;</code>
       */
      public Builder setBlockData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (blockDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          blockData_ = value;
          onChanged();
        } else {
          blockDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TeraArray block_data = 5;</code>
       */
      public Builder setBlockData(
          org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder builderForValue) {
        if (blockDataBuilder_ == null) {
          blockData_ = builderForValue.build();
          onChanged();
        } else {
          blockDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TeraArray block_data = 5;</code>
       */
      public Builder mergeBlockData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (blockDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              blockData_ != org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) {
            blockData_ =
              org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder(blockData_).mergeFrom(value).buildPartial();
          } else {
            blockData_ = value;
          }
          onChanged();
        } else {
          blockDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TeraArray block_data = 5;</code>
       */
      public Builder clearBlockData() {
        if (blockDataBuilder_ == null) {
          blockData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
          onChanged();
        } else {
          blockDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .TeraArray block_data = 5;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder getBlockDataBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getBlockDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TeraArray block_data = 5;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getBlockDataOrBuilder() {
        if (blockDataBuilder_ != null) {
          return blockDataBuilder_.getMessageOrBuilder();
        } else {
          return blockData_;
        }
      }
      /**
       * <code>optional .TeraArray block_data = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> 
          getBlockDataFieldBuilder() {
        if (blockDataBuilder_ == null) {
          blockDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder>(
                  blockData_,
                  getParentForChildren(),
                  isClean());
          blockData_ = null;
        }
        return blockDataBuilder_;
      }

      // optional .TeraArray sunlight_data = 6;
      private org.terasology.protobuf.ChunksProtobuf.TeraArray sunlightData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> sunlightDataBuilder_;
      /**
       * <code>optional .TeraArray sunlight_data = 6;</code>
       */
      public boolean hasSunlightData() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .TeraArray sunlight_data = 6;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.TeraArray getSunlightData() {
        if (sunlightDataBuilder_ == null) {
          return sunlightData_;
        } else {
          return sunlightDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TeraArray sunlight_data = 6;</code>
       */
      public Builder setSunlightData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (sunlightDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sunlightData_ = value;
          onChanged();
        } else {
          sunlightDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TeraArray sunlight_data = 6;</code>
       */
      public Builder setSunlightData(
          org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder builderForValue) {
        if (sunlightDataBuilder_ == null) {
          sunlightData_ = builderForValue.build();
          onChanged();
        } else {
          sunlightDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TeraArray sunlight_data = 6;</code>
       */
      public Builder mergeSunlightData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (sunlightDataBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              sunlightData_ != org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) {
            sunlightData_ =
              org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder(sunlightData_).mergeFrom(value).buildPartial();
          } else {
            sunlightData_ = value;
          }
          onChanged();
        } else {
          sunlightDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TeraArray sunlight_data = 6;</code>
       */
      public Builder clearSunlightData() {
        if (sunlightDataBuilder_ == null) {
          sunlightData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
          onChanged();
        } else {
          sunlightDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .TeraArray sunlight_data = 6;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder getSunlightDataBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getSunlightDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TeraArray sunlight_data = 6;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getSunlightDataOrBuilder() {
        if (sunlightDataBuilder_ != null) {
          return sunlightDataBuilder_.getMessageOrBuilder();
        } else {
          return sunlightData_;
        }
      }
      /**
       * <code>optional .TeraArray sunlight_data = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> 
          getSunlightDataFieldBuilder() {
        if (sunlightDataBuilder_ == null) {
          sunlightDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder>(
                  sunlightData_,
                  getParentForChildren(),
                  isClean());
          sunlightData_ = null;
        }
        return sunlightDataBuilder_;
      }

      // optional .TeraArray light_data = 7;
      private org.terasology.protobuf.ChunksProtobuf.TeraArray lightData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> lightDataBuilder_;
      /**
       * <code>optional .TeraArray light_data = 7;</code>
       */
      public boolean hasLightData() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .TeraArray light_data = 7;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.TeraArray getLightData() {
        if (lightDataBuilder_ == null) {
          return lightData_;
        } else {
          return lightDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TeraArray light_data = 7;</code>
       */
      public Builder setLightData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (lightDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lightData_ = value;
          onChanged();
        } else {
          lightDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TeraArray light_data = 7;</code>
       */
      public Builder setLightData(
          org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder builderForValue) {
        if (lightDataBuilder_ == null) {
          lightData_ = builderForValue.build();
          onChanged();
        } else {
          lightDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TeraArray light_data = 7;</code>
       */
      public Builder mergeLightData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (lightDataBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              lightData_ != org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) {
            lightData_ =
              org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder(lightData_).mergeFrom(value).buildPartial();
          } else {
            lightData_ = value;
          }
          onChanged();
        } else {
          lightDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TeraArray light_data = 7;</code>
       */
      public Builder clearLightData() {
        if (lightDataBuilder_ == null) {
          lightData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
          onChanged();
        } else {
          lightDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .TeraArray light_data = 7;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder getLightDataBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getLightDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TeraArray light_data = 7;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getLightDataOrBuilder() {
        if (lightDataBuilder_ != null) {
          return lightDataBuilder_.getMessageOrBuilder();
        } else {
          return lightData_;
        }
      }
      /**
       * <code>optional .TeraArray light_data = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> 
          getLightDataFieldBuilder() {
        if (lightDataBuilder_ == null) {
          lightDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder>(
                  lightData_,
                  getParentForChildren(),
                  isClean());
          lightData_ = null;
        }
        return lightDataBuilder_;
      }

      // optional .TeraArray extra_data = 8;
      private org.terasology.protobuf.ChunksProtobuf.TeraArray extraData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> extraDataBuilder_;
      /**
       * <code>optional .TeraArray extra_data = 8;</code>
       */
      public boolean hasExtraData() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .TeraArray extra_data = 8;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.TeraArray getExtraData() {
        if (extraDataBuilder_ == null) {
          return extraData_;
        } else {
          return extraDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TeraArray extra_data = 8;</code>
       */
      public Builder setExtraData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (extraDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          extraData_ = value;
          onChanged();
        } else {
          extraDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TeraArray extra_data = 8;</code>
       */
      public Builder setExtraData(
          org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder builderForValue) {
        if (extraDataBuilder_ == null) {
          extraData_ = builderForValue.build();
          onChanged();
        } else {
          extraDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TeraArray extra_data = 8;</code>
       */
      public Builder mergeExtraData(org.terasology.protobuf.ChunksProtobuf.TeraArray value) {
        if (extraDataBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              extraData_ != org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance()) {
            extraData_ =
              org.terasology.protobuf.ChunksProtobuf.TeraArray.newBuilder(extraData_).mergeFrom(value).buildPartial();
          } else {
            extraData_ = value;
          }
          onChanged();
        } else {
          extraDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TeraArray extra_data = 8;</code>
       */
      public Builder clearExtraData() {
        if (extraDataBuilder_ == null) {
          extraData_ = org.terasology.protobuf.ChunksProtobuf.TeraArray.getDefaultInstance();
          onChanged();
        } else {
          extraDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .TeraArray extra_data = 8;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder getExtraDataBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getExtraDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TeraArray extra_data = 8;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder getExtraDataOrBuilder() {
        if (extraDataBuilder_ != null) {
          return extraDataBuilder_.getMessageOrBuilder();
        } else {
          return extraData_;
        }
      }
      /**
       * <code>optional .TeraArray extra_data = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder> 
          getExtraDataFieldBuilder() {
        if (extraDataBuilder_ == null) {
          extraDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.TeraArray, org.terasology.protobuf.ChunksProtobuf.TeraArray.Builder, org.terasology.protobuf.ChunksProtobuf.TeraArrayOrBuilder>(
                  extraData_,
                  getParentForChildren(),
                  isClean());
          extraData_ = null;
        }
        return extraDataBuilder_;
      }

      // repeated .ModData mod_data = 9;
      private java.util.List<org.terasology.protobuf.ChunksProtobuf.ModData> modData_ =
        java.util.Collections.emptyList();
      private void ensureModDataIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          modData_ = new java.util.ArrayList<org.terasology.protobuf.ChunksProtobuf.ModData>(modData_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.ModData, org.terasology.protobuf.ChunksProtobuf.ModData.Builder, org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder> modDataBuilder_;

      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public java.util.List<org.terasology.protobuf.ChunksProtobuf.ModData> getModDataList() {
        if (modDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(modData_);
        } else {
          return modDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public int getModDataCount() {
        if (modDataBuilder_ == null) {
          return modData_.size();
        } else {
          return modDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.ModData getModData(int index) {
        if (modDataBuilder_ == null) {
          return modData_.get(index);
        } else {
          return modDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public Builder setModData(
          int index, org.terasology.protobuf.ChunksProtobuf.ModData value) {
        if (modDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModDataIsMutable();
          modData_.set(index, value);
          onChanged();
        } else {
          modDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public Builder setModData(
          int index, org.terasology.protobuf.ChunksProtobuf.ModData.Builder builderForValue) {
        if (modDataBuilder_ == null) {
          ensureModDataIsMutable();
          modData_.set(index, builderForValue.build());
          onChanged();
        } else {
          modDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public Builder addModData(org.terasology.protobuf.ChunksProtobuf.ModData value) {
        if (modDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModDataIsMutable();
          modData_.add(value);
          onChanged();
        } else {
          modDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public Builder addModData(
          int index, org.terasology.protobuf.ChunksProtobuf.ModData value) {
        if (modDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModDataIsMutable();
          modData_.add(index, value);
          onChanged();
        } else {
          modDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public Builder addModData(
          org.terasology.protobuf.ChunksProtobuf.ModData.Builder builderForValue) {
        if (modDataBuilder_ == null) {
          ensureModDataIsMutable();
          modData_.add(builderForValue.build());
          onChanged();
        } else {
          modDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public Builder addModData(
          int index, org.terasology.protobuf.ChunksProtobuf.ModData.Builder builderForValue) {
        if (modDataBuilder_ == null) {
          ensureModDataIsMutable();
          modData_.add(index, builderForValue.build());
          onChanged();
        } else {
          modDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public Builder addAllModData(
          java.lang.Iterable<? extends org.terasology.protobuf.ChunksProtobuf.ModData> values) {
        if (modDataBuilder_ == null) {
          ensureModDataIsMutable();
          super.addAll(values, modData_);
          onChanged();
        } else {
          modDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public Builder clearModData() {
        if (modDataBuilder_ == null) {
          modData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          modDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public Builder removeModData(int index) {
        if (modDataBuilder_ == null) {
          ensureModDataIsMutable();
          modData_.remove(index);
          onChanged();
        } else {
          modDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.ModData.Builder getModDataBuilder(
          int index) {
        return getModDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder getModDataOrBuilder(
          int index) {
        if (modDataBuilder_ == null) {
          return modData_.get(index);  } else {
          return modDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public java.util.List<? extends org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder> 
           getModDataOrBuilderList() {
        if (modDataBuilder_ != null) {
          return modDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(modData_);
        }
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.ModData.Builder addModDataBuilder() {
        return getModDataFieldBuilder().addBuilder(
            org.terasology.protobuf.ChunksProtobuf.ModData.getDefaultInstance());
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public org.terasology.protobuf.ChunksProtobuf.ModData.Builder addModDataBuilder(
          int index) {
        return getModDataFieldBuilder().addBuilder(
            index, org.terasology.protobuf.ChunksProtobuf.ModData.getDefaultInstance());
      }
      /**
       * <code>repeated .ModData mod_data = 9;</code>
       */
      public java.util.List<org.terasology.protobuf.ChunksProtobuf.ModData.Builder> 
           getModDataBuilderList() {
        return getModDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.terasology.protobuf.ChunksProtobuf.ModData, org.terasology.protobuf.ChunksProtobuf.ModData.Builder, org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder> 
          getModDataFieldBuilder() {
        if (modDataBuilder_ == null) {
          modDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.terasology.protobuf.ChunksProtobuf.ModData, org.terasology.protobuf.ChunksProtobuf.ModData.Builder, org.terasology.protobuf.ChunksProtobuf.ModDataOrBuilder>(
                  modData_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          modData_ = null;
        }
        return modDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Chunk)
    }

    static {
      defaultInstance = new Chunk(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Chunk)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TeraArray_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TeraArray_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ModData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ModData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Chunk_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Chunk_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014Chunks.proto\"M\n\tTeraArray\022\023\n\004type\030\001 \001(" +
      "\0162\005.Type\022\022\n\nclass_name\030\002 \001(\t\022\014\n\004data\030\003 \001" +
      "(\014*\t\010\210\'\020\200\200\200\200\002\":\n\007ModData\022\n\n\002id\030\001 \001(\t\022\030\n\004" +
      "data\030\002 \001(\0132\n.TeraArray*\t\010\210\'\020\200\200\200\200\002\"\351\001\n\005Ch" +
      "unk\022\t\n\001x\030\001 \001(\021\022\t\n\001y\030\002 \001(\021\022\t\n\001z\030\003 \001(\021\022\025\n\005" +
      "state\030\004 \001(\0162\006.State\022\036\n\nblock_data\030\005 \001(\0132" +
      "\n.TeraArray\022!\n\rsunlight_data\030\006 \001(\0132\n.Ter" +
      "aArray\022\036\n\nlight_data\030\007 \001(\0132\n.TeraArray\022\036" +
      "\n\nextra_data\030\010 \001(\0132\n.TeraArray\022\032\n\010mod_da" +
      "ta\030\t \003(\0132\010.ModData*\t\010\210\'\020\200\200\200\200\002*\220\001\n\004Type\022\013",
      "\n\007Unknown\020\000\022\022\n\016DenseArray4Bit\020\001\022\022\n\016Dense" +
      "Array8Bit\020\002\022\023\n\017DenseArray16Bit\020\003\022\023\n\017Spar" +
      "seArray4Bit\020\004\022\023\n\017SparseArray8Bit\020\005\022\024\n\020Sp" +
      "arseArray16Bit\020\006*\242\001\n\005State\022 \n\034ADJACENCY_" +
      "GENERATION_PENDING\020\000\022%\n!INTERNAL_LIGHT_G" +
      "ENERATION_PENDING\020\001\022\035\n\031LIGHT_PROPAGATION" +
      "_PENDING\020\002\022#\n\037FULL_LIGHT_CONNECTIVITY_PE" +
      "NDING\020\003\022\014\n\010COMPLETE\020\004B+\n\027org.terasology." +
      "protobufB\016ChunksProtobufH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TeraArray_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TeraArray_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TeraArray_descriptor,
              new java.lang.String[] { "Type", "ClassName", "Data", });
          internal_static_ModData_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_ModData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ModData_descriptor,
              new java.lang.String[] { "Id", "Data", });
          internal_static_Chunk_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_Chunk_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Chunk_descriptor,
              new java.lang.String[] { "X", "Y", "Z", "State", "BlockData", "SunlightData", "LightData", "ExtraData", "ModData", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
