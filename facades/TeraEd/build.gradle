// Copyright 2021 The Terasology Foundation
// SPDX-License-Identifier: Apache-2.0

// The Editor facade is responsible for the (shader) editor - a plain Java application runnable on PCs

plugins {
    id "application"
}

// Grab all the common stuff like plugins to use, artifact repositories, code analysis config
apply from: "$rootDir/config/gradle/publish.gradle"

// Base the engine tests on the same version number as the engine
version = project(':engine').version
println "TeraEd VERSION: $version"

// Jenkins-Artifactory integration catches on to this as part of the Maven-type descriptor
group = 'org.terasology.facades'

sourceSets {
    // Adjust output path (changed with the Gradle 6 upgrade, this puts it back)
    main.java.outputDir = new File("$buildDir/classes")
    test.java.outputDir = new File("$buildDir/testClasses")
}

dependencies {
    implementation project(':engine')
    implementation "org.terasology:reflections:0.9.12-MB"

    runtimeOnly(platform(project(":modules")))
    // For the "natives" configuration make it depend on the native files from LWJGL
    implementation platform("org.lwjgl:lwjgl-bom:$LwjglVersion")
    ["natives-linux", "natives-windows", "natives-macos"].forEach {
        implementation "org.lwjgl:lwjgl::$it"
        implementation "org.lwjgl:lwjgl-assimp::$it"
        implementation "org.lwjgl:lwjgl-glfw::$it"
        implementation "org.lwjgl:lwjgl-openal::$it"
        implementation "org.lwjgl:lwjgl-opengl::$it"
        implementation "org.lwjgl:lwjgl-stb::$it"
    }
    implementation "org.lwjgl:lwjgl-jawt"

    implementation(group: 'com.google.guava', name: 'guava', version: '30.1-jre')

    implementation(project(":subsystems:DiscordRPC"))
    implementation(project(":subsystems:TypeHandlerLibrary"))

    implementation(group: 'org.lwjglx', name: 'lwjgl3-awt', version: '0.1.7') {
        exclude group: 'org.lwjgl', module: ''
    }
}

application {
    mainClass = "org.terasology.editor.TeraEd"
}

run {
    description = "Run 'TeraEd' to configure graphics shader parameters in a standard PC application"
    group = "terasology run"

    workingDir = rootDir
    args "-homedir"
}

task editor(type: JavaExec) {
    description = "Run 'TeraEd' to configure graphics shader parameters in a standard PC application"
    group = "terasology run"

    // Dependencies: natives + all modules & the PC facade itself (which will trigger the engine)
    dependsOn rootProject.extractNatives
    dependsOn classes

    // Run arguments
    main = 'org.terasology.editor.TeraEd'
    workingDir = rootDir
    String[] runArgs = ["-homedir"]
    args runArgs

    // Classpath: PC itself, engine classes, engine dependencies. Not modules or natives since the engine finds those
    classpath sourceSets.main.output.classesDirs
    classpath sourceSets.main.output.resourcesDir
    classpath project(':engine').sourceSets.main.output.classesDirs
    classpath project(':engine').configurations.runtimeClasspath
}

// Prep an IntelliJ module for the facade
idea {
    module {
        // Change around the output a bit
        inheritOutputDirs = false
        outputDir = file('build/classes')
        testOutputDir = file('build/testClasses')
    }
}
