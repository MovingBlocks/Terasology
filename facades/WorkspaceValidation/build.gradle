// Copyright 2021 The Terasology Foundation
// SPDX-License-Identifier: Apache-2.0

// The Editor facade is responsible for the (shader) editor - a plain Java application runnable on PCs

// Grab all the common stuff like plugins to use, artifact repositories, code analysis config
apply from: "$rootDir/config/gradle/publish.gradle"

// Base the engine tests on the same version number as the engine
version = project(':engine').version
println "TeraEd VERSION: $version"

// Jenkins-Artifactory integration catches on to this as part of the Maven-type descriptor
group = 'org.terasology.facades'

sourceSets {
    // Adjust output path (changed with the Gradle 6 upgrade, this puts it back)
    main.java.outputDir = new File("$buildDir/classes")
    test.java.outputDir = new File("$buildDir/testClasses")
}

dependencies {
    implementation project(':engine')
    implementation "org.terasology:reflections:0.9.12-MB"

    implementation(platform(project(":modules")))

    implementation(project(":engine-tests"))

    implementation("org.terasology.modules:ModuleTestingEnvironment:0.3.3-SNAPSHOT")

    implementation(group: 'com.google.guava', name: 'guava', version: '30.1-jre')

    implementation(project(":subsystems:DiscordRPC"))
    implementation(project(":subsystems:TypeHandlerLibrary"))

    implementation(group: 'org.lwjglx', name: 'lwjgl3-awt', version: '0.1.7') {
        exclude group: 'org.lwjgl', module: ''
    }

    // Test lib dependencies
    implementation(platform("org.junit:junit-bom:5.8.1")) {
        // junit-bom will set version numbers for the other org.junit dependencies.
    }
    implementation("org.junit.jupiter:junit-jupiter-api")
    implementation("org.junit.jupiter:junit-jupiter-params")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    testImplementation('org.mockito:mockito-inline:3.12.4')
}

test {
//    dependsOn copyResourcesToClasses
    dependsOn rootProject.extractNatives

    description("Runs all tests (slow)")

    systemProperty("junit.jupiter.execution.timeout.default", "4m")
}



// Prep an IntelliJ module for the facade
idea {
    module {
        // Change around the output a bit
        inheritOutputDirs = false
        outputDir = file('build/classes')
        testOutputDir = file('build/testClasses')
    }
}
